import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as e,c,a as i,b as s,d as a,e as l}from"./app-9ba8c8d9.js";const u={},r={href:"http://xxx.xxx.xxx",target:"_blank",rel:"noopener noreferrer"};function k(d,n){const t=o("ExternalLinkIcon");return e(),c("div",null,[n[9]||(n[9]=i(`<h2 id="azrng-sqlmigration" tabindex="-1"><a class="header-anchor" href="#azrng-sqlmigration" aria-hidden="true">#</a> Azrng.SqlMigration</h2><p>一个脚本迁移的nuget包，目前只支持pgsql数据库</p><h3 id="快速上手" tabindex="-1"><a class="header-anchor" href="#快速上手" aria-hidden="true">#</a> 快速上手</h3><p>将需要迁移的脚本文件放到执行目录下，比如可以放在wwwroot下的MigrationSql目录下，文件命名格式为1.0.0.txt、1.1.0.txt等</p><p>举例迁移一个数据库示例</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddSqlMigrationService</span><span class="token punctuation">(</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span> config <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    config<span class="token punctuation">.</span>Schema <span class="token operator">=</span> <span class="token string">&quot;aa&quot;</span><span class="token punctuation">;</span>
    config<span class="token punctuation">.</span>VersionPrefix <span class="token operator">=</span> <span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">;</span>
    config<span class="token punctuation">.</span>SqlRootPath <span class="token operator">=</span> Path<span class="token punctuation">.</span><span class="token function">Combine</span><span class="token punctuation">(</span>builder<span class="token punctuation">.</span>Environment<span class="token punctuation">.</span>WebRootPath<span class="token punctuation">,</span> <span class="token string">&quot;MigrationSql&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    config<span class="token punctuation">.</span>ConnectionBuilder <span class="token operator">=</span> <span class="token punctuation">(</span>sp<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">NpgsqlConnection</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// config.LockProvider = x =&gt; x.GetRequiredService&lt;ILockProvider&gt;().LockAsync(&quot;project_init&quot;, TimeSpan.FromMinutes(1));</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AddAutoMigration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="功能" tabindex="-1"><a class="header-anchor" href="#功能" aria-hidden="true">#</a> 功能</h3><h4 id="支持的版本号" tabindex="-1"><a class="header-anchor" href="#支持的版本号" aria-hidden="true">#</a> 支持的版本号</h4><p>支持以下形式版本号</p><ul><li>1.0.0.txt、1.0.0.sql</li><li>1.0.0.0.txt、1.0.0.0.sql</li><li>111.111.111.txt、111.111.111.sql</li><li>111.111.111.111.txt、111.111.111.111.sql</li></ul><h4 id="迁移多个数据库" tabindex="-1"><a class="header-anchor" href="#迁移多个数据库" aria-hidden="true">#</a> 迁移多个数据库</h4><p>default、default2为迁移名字</p><div class="language-c# line-numbers-mode" data-ext="c#"><pre class="language-c#"><code>builder.Services.AddSqlMigrationService(&quot;default&quot;, config =&gt;
{
    config.Schema = &quot;aa&quot;;
    config.VersionPrefix = string.Empty;
    config.SqlRootPath = Path.Combine(builder.Environment.WebRootPath, &quot;MigrationSql&quot;);
    config.ConnectionBuilder = (sp) =&gt; new NpgsqlConnection(conn);
    // config.LockProvider = x =&gt; x.GetRequiredService&lt;ILockProvider&gt;().LockAsync(&quot;project_init&quot;, TimeSpan.FromMinutes(1));
}).AddSqlMigrationService(&quot;default2&quot;, config =&gt;
{
    config.Schema = &quot;bb&quot;;
    config.VersionPrefix = string.Empty;
    config.SqlRootPath = Path.Combine(builder.Environment.WebRootPath, &quot;MigrationSql2&quot;);
    config.ConnectionBuilder = (sp) =&gt; new NpgsqlConnection(conn2);
    // config.LockProvider = x =&gt; x.GetRequiredService&lt;ILockProvider&gt;().LockAsync(&quot;project_init&quot;, TimeSpan.FromMinutes(1));
}).AddAutoMigration();
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="迁移操作回调" tabindex="-1"><a class="header-anchor" href="#迁移操作回调" aria-hidden="true">#</a> 迁移操作回调</h4><p>如果想实现在开始迁移之前以及版本更新前后以及迁移之后做一些处理，可以继承自IMigrationHandler编写迁移回调处理，示例如下</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DefaultMigrationHandler</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IMigrationHandler</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">ILogger<span class="token punctuation">&lt;</span>DefaultMigrationHandler<span class="token punctuation">&gt;</span></span> _logger<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">DefaultMigrationHandler</span><span class="token punctuation">(</span><span class="token class-name">ILogger<span class="token punctuation">&lt;</span>DefaultMigrationHandler<span class="token punctuation">&gt;</span></span> logger<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _logger <span class="token operator">=</span> logger<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">&gt;</span></span> <span class="token function">BeforeMigrateAsync</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> oloVersion<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;原始版本：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">oloVersion</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> Task<span class="token punctuation">.</span><span class="token function">FromResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">&gt;</span></span> <span class="token function">VersionUpdateBeforeMigrateAsync</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> version<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;版本：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">version</span><span class="token punctuation">}</span></span><span class="token string">迁移前&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> Task<span class="token punctuation">.</span><span class="token function">FromResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">Task</span> <span class="token function">VersionUpdateMigratedAsync</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> version<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;版本：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">version</span><span class="token punctuation">}</span></span><span class="token string">迁移成功后&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> Task<span class="token punctuation">.</span><span class="token function">FromResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">Task</span> <span class="token function">VersionUpdateMigrateFailedAsync</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> version<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;版本：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">version</span><span class="token punctuation">}</span></span><span class="token string">迁移失败&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> Task<span class="token punctuation">.</span><span class="token function">FromResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">Task</span> <span class="token function">MigratedAsync</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> oldVersion<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> version<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;原始版本：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">oldVersion</span><span class="token punctuation">}</span></span><span class="token string"> 当前版本：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">version</span><span class="token punctuation">}</span></span><span class="token string">迁移成功&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> Task<span class="token punctuation">.</span><span class="token function">FromResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">Task</span> <span class="token function">MigrateFailedAsync</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> oldVersion<span class="token punctuation">,</span><span class="token class-name"><span class="token keyword">string</span></span> version<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;原始版本：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">oldVersion</span><span class="token punctuation">}</span></span><span class="token string"> 当前版本：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">version</span><span class="token punctuation">}</span></span><span class="token string">迁移失败&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> Task<span class="token punctuation">.</span><span class="token function">FromResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>服务配置</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddSqlMigrationService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>DefaultMigrationHandler<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span> config <span class="token operator">=&gt;</span>
       <span class="token punctuation">{</span>
           config<span class="token punctuation">.</span>Schema <span class="token operator">=</span> <span class="token string">&quot;aa&quot;</span><span class="token punctuation">;</span>
           config<span class="token punctuation">.</span>VersionPrefix <span class="token operator">=</span> <span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">;</span>
           config<span class="token punctuation">.</span>SqlRootPath <span class="token operator">=</span> Path<span class="token punctuation">.</span><span class="token function">Combine</span><span class="token punctuation">(</span>builder<span class="token punctuation">.</span>Environment<span class="token punctuation">.</span>WebRootPath<span class="token punctuation">,</span> <span class="token string">&quot;MigrationSql&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           config<span class="token punctuation">.</span>ConnectionBuilder <span class="token operator">=</span> <span class="token punctuation">(</span>sp<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">NpgsqlConnection</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span><span class="token punctuation">;</span>
           config<span class="token punctuation">.</span>LockProvider <span class="token operator">=</span> x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetRequiredService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ILockProvider<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">LockAsync</span><span class="token punctuation">(</span><span class="token string">&quot;project_init&quot;</span><span class="token punctuation">,</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromMinutes</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span><span class="token punctuation">)</span>
       <span class="token punctuation">.</span><span class="token function">AddAutoMigration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="分布式锁处理" tabindex="-1"><a class="header-anchor" href="#分布式锁处理" aria-hidden="true">#</a> 分布式锁处理</h4><p>为了防止多实例的情况下迁移出现问题，这里可以使用nuget包Azrng.DistributeLock.Redis来实现多实例的情况下只有一个实例进行迁移</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddRedisLockProvider</span><span class="token punctuation">(</span><span class="token string">&quot;localhost:6379,password=123456,defaultdatabase=0,abortConnect=false&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddSqlMigrationService</span><span class="token punctuation">(</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span> config <span class="token operator">=&gt;</span>
       <span class="token punctuation">{</span>
           config<span class="token punctuation">.</span>Schema <span class="token operator">=</span> <span class="token string">&quot;aa&quot;</span><span class="token punctuation">;</span>
           config<span class="token punctuation">.</span>VersionPrefix <span class="token operator">=</span> <span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">;</span>
           config<span class="token punctuation">.</span>SqlRootPath <span class="token operator">=</span> Path<span class="token punctuation">.</span><span class="token function">Combine</span><span class="token punctuation">(</span>builder<span class="token punctuation">.</span>Environment<span class="token punctuation">.</span>WebRootPath<span class="token punctuation">,</span> <span class="token string">&quot;MigrationSql&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           config<span class="token punctuation">.</span>ConnectionBuilder <span class="token operator">=</span> <span class="token punctuation">(</span>sp<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">NpgsqlConnection</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span><span class="token punctuation">;</span>
           config<span class="token punctuation">.</span>LockProvider <span class="token operator">=</span> x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetRequiredService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ILockProvider<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">LockAsync</span><span class="token punctuation">(</span><span class="token string">&quot;project_init&quot;</span><span class="token punctuation">,</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromMinutes</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span><span class="token punctuation">)</span>
       <span class="token punctuation">.</span><span class="token function">AddAutoMigration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="版本更新记录" tabindex="-1"><a class="header-anchor" href="#版本更新记录" aria-hidden="true">#</a> 版本更新记录</h3>`,22)),s("ul",null,[n[6]||(n[6]=s("li",null,[a("0.2.0-未发布 "),s("ul",null,[s("li",null,"优化执行脚本回调")])],-1)),s("li",null,[n[5]||(n[5]=a("0.1.0 ")),s("ul",null,[n[3]||(n[3]=s("li",null,"更新迁移输出内容",-1)),n[4]||(n[4]=s("li",null,"支持四位版本号",-1)),s("li",null,[n[1]||(n[1]=a("支持 ")),s("a",r,[n[0]||(n[0]=a("xxx.xxx.xxx")),l(t)]),n[2]||(n[2]=a(" 三位细分版本号"))])])]),n[7]||(n[7]=s("li",null,[a("0.0.2 "),s("ul",null,[s("li",null,"修复sql问题")])],-1)),n[8]||(n[8]=s("li",null,[a("0.0.1 "),s("ul",null,[s("li",null,"基本迁移操作")])],-1))])])}const m=p(u,[["render",k],["__file","sqlMigration.html.vue"]]);export{m as default};
