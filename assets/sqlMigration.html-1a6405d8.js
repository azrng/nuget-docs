import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o,c as p,b as n,d as s,e as c,a as i}from"./app-ad9c526f.js";const l={},u=i(`<h2 id="azrng-sqlmigration" tabindex="-1"><a class="header-anchor" href="#azrng-sqlmigration" aria-hidden="true">#</a> Azrng.SqlMigration</h2><p>一个脚本迁移的nuget包</p><h3 id="快速上手" tabindex="-1"><a class="header-anchor" href="#快速上手" aria-hidden="true">#</a> 快速上手</h3><p>将需要迁移的文件放到执行目录下，比如可以放在wwwroot下的InitSql目录下，文件命名格式为1.0.0.txt、1.1.0.txt等</p><p>举例迁移一个数据库示例</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>services<span class="token punctuation">.</span><span class="token function">AddSqlMigrationService</span><span class="token punctuation">(</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span> config <span class="token operator">=&gt;</span>
            <span class="token punctuation">{</span>
                config<span class="token punctuation">.</span>Schema <span class="token operator">=</span> <span class="token string">&quot;sample&quot;</span><span class="token punctuation">;</span>
                config<span class="token punctuation">.</span>VersionPrefix <span class="token operator">=</span> <span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">;</span>
                config<span class="token punctuation">.</span>SqlRootPath <span class="token operator">=</span> Path<span class="token punctuation">.</span><span class="token function">Combine</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span>WebRootPath<span class="token punctuation">,</span> <span class="token string">&quot;InitSql&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                config<span class="token punctuation">.</span>ConnectionBuilder <span class="token operator">=</span> <span class="token punctuation">(</span>sp<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">NpgsqlConnection</span><span class="token punctuation">(</span>Configuration<span class="token punctuation">.</span><span class="token function">GetConnectionString</span><span class="token punctuation">(</span><span class="token string">&quot;Pgsql&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AddAutoMigration</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="迁移多个数据库" tabindex="-1"><a class="header-anchor" href="#迁移多个数据库" aria-hidden="true">#</a> 迁移多个数据库</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>builder.Services.AddSqlMigrationService(&quot;default&quot;, config =&gt;
{
    config.Schema = &quot;aa&quot;;
    config.VersionPrefix = string.Empty;
    config.SqlRootPath = Path.Combine(builder.Environment.WebRootPath, &quot;MigrationSql&quot;);
    config.ConnectionBuilder = (sp) =&gt; new NpgsqlConnection(conn);
    // config.LockProvider = x =&gt; x.GetRequiredService&lt;ILockProvider&gt;().LockAsync(&quot;project_init&quot;, TimeSpan.FromMinutes(1));
}).AddSqlMigrationService(&quot;default2&quot;, config =&gt;
{
    config.Schema = &quot;bb&quot;;
    config.VersionPrefix = string.Empty;
    config.SqlRootPath = Path.Combine(builder.Environment.WebRootPath, &quot;MigrationSql2&quot;);
    config.ConnectionBuilder = (sp) =&gt; new NpgsqlConnection(conn2);
    // config.LockProvider = x =&gt; x.GetRequiredService&lt;ILockProvider&gt;().LockAsync(&quot;project_init&quot;, TimeSpan.FromMinutes(1));
}).AddAutoMigration();
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="迁移回调" tabindex="-1"><a class="header-anchor" href="#迁移回调" aria-hidden="true">#</a> 迁移回调</h3><p>继承自IMigrationHandler编写迁移回调处理</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DefaultMigrationHandler</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IMigrationHandler</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">ILogger<span class="token punctuation">&lt;</span>DefaultMigrationHandler<span class="token punctuation">&gt;</span></span> _logger<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">DefaultMigrationHandler</span><span class="token punctuation">(</span><span class="token class-name">ILogger<span class="token punctuation">&lt;</span>DefaultMigrationHandler<span class="token punctuation">&gt;</span></span> logger<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _logger <span class="token operator">=</span> logger<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">&gt;</span></span> <span class="token function">BeforeMigrateAsync</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> version<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;版本：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">version</span><span class="token punctuation">}</span></span><span class="token string">迁移前&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> Task<span class="token punctuation">.</span><span class="token function">FromResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">Task</span> <span class="token function">MigratedAsync</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> version<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;版本：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">version</span><span class="token punctuation">}</span></span><span class="token string">迁移成功后&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> Task<span class="token punctuation">.</span><span class="token function">FromResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">Task</span> <span class="token function">MigrateFailedAsync</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> version<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;版本：</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">version</span><span class="token punctuation">}</span></span><span class="token string">迁移失败&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> Task<span class="token punctuation">.</span><span class="token function">FromResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>服务配置</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddSqlMigrationService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>DefaultMigrationHandler<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span> config <span class="token operator">=&gt;</span>
       <span class="token punctuation">{</span>
           config<span class="token punctuation">.</span>Schema <span class="token operator">=</span> <span class="token string">&quot;aa&quot;</span><span class="token punctuation">;</span>
           config<span class="token punctuation">.</span>VersionPrefix <span class="token operator">=</span> <span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">;</span>
           config<span class="token punctuation">.</span>SqlRootPath <span class="token operator">=</span> Path<span class="token punctuation">.</span><span class="token function">Combine</span><span class="token punctuation">(</span>builder<span class="token punctuation">.</span>Environment<span class="token punctuation">.</span>WebRootPath<span class="token punctuation">,</span> <span class="token string">&quot;MigrationSql&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           config<span class="token punctuation">.</span>ConnectionBuilder <span class="token operator">=</span> <span class="token punctuation">(</span>sp<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">NpgsqlConnection</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span><span class="token punctuation">;</span>
           config<span class="token punctuation">.</span>LockProvider <span class="token operator">=</span> x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetRequiredService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ILockProvider<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">LockAsync</span><span class="token punctuation">(</span><span class="token string">&quot;project_init&quot;</span><span class="token punctuation">,</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromMinutes</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span><span class="token punctuation">)</span>
       <span class="token punctuation">.</span><span class="token function">AddAutoMigration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="版本更新记录" tabindex="-1"><a class="header-anchor" href="#版本更新记录" aria-hidden="true">#</a> 版本更新记录</h3>`,14),r=n("li",null,"更新迁移输出内容",-1),k=n("li",null,"支持四位版本号",-1),d={href:"http://xxx.xxx.xxx",target:"_blank",rel:"noopener noreferrer"},v=n("li",null,[s("0.0.2 "),n("ul",null,[n("li",null,"修复sql问题")])],-1),g=n("li",null,[s("0.0.1 "),n("ul",null,[n("li",null,"基本迁移操作")])],-1);function m(b,f){const a=e("ExternalLinkIcon");return o(),p("div",null,[u,n("ul",null,[n("li",null,[s("0.1.0 "),n("ul",null,[r,k,n("li",null,[s("支持 "),n("a",d,[s("xxx.xxx.xxx"),c(a)]),s(" 三位细分版本号")])])]),v,g])])}const x=t(l,[["render",m],["__file","sqlMigration.html.vue"]]);export{x as default};
