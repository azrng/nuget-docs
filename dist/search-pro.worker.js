const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return W(e,t,s,n,i,1,o,""),n},W=(e,t,s,n,o,u,i,r)=>{const h=u*i;t:for(const c of e.keys())if(c===F){const d=o[h-1];d<=s&&n.set(r,[e.get(c),d])}else{let d=u;for(let l=0;l<c.length;++l,++d){const p=c[l],f=i*d,g=f-i;let a=o[f];const m=Math.max(0,d-s-1),y=Math.min(i-1,d+s);for(let _=m;_<y;++_){const b=p!==t[_],z=o[g+_]+ +b,A=o[g+_+1]+1,w=o[f+_]+1,L=o[f+_+1]=Math.min(z,A,w);L<a&&(a=L)}if(a>s)continue t}W(e.get(c),t,s,n,o,d,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const h=e.get(u);if(r===u.length)e=h;else{const c=new Map;c.set(u.slice(r),h),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)R(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},R=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)R(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",q="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,u)}}return e},[q]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d:h}=u;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(i+1)/(e+i*(1-r+r*n/o)))},ft=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,ht),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:q,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,o,u,i,r,h=new Map)=>{if(o==null)return h;for(const c of Object.keys(u)){const d=u[c],l=e._fieldIds[c],p=o.get(l);if(p==null)continue;let f=p.size;const g=e._avgFieldLength[l];for(const a of p.keys()){if(!e._documentIds.has(a)){gt(e,l,a,s),f-=1;continue}const m=i?i(e._documentIds.get(a),s,e._storedFields.get(a)):1;if(!m)continue;const y=p.get(a),_=e._fieldLength.get(a)[l],b=at(y,f,e._documentCount,_,g,r),z=n*d*m*b,A=h.get(a);if(A){A.score+=z,lt(A.terms,t);const w=N(A.match,s);w?w.push(c):A.match[s]=[c]}else h.set(a,{score:z,terms:[t],match:{[s]:[c]}})}}return h},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((a,m)=>({...a,[m]:N(n.boost,m)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:h}=n,{fuzzy:c,prefix:d}={...J.weights,...i},l=e._index.get(t.term),p=B(e,t.term,t.term,1,l,o,u,h);let f,g;if(t.prefix&&(f=e._index.atPrefix(t.term)),t.fuzzy){const a=t.fuzzy===!0?.2:t.fuzzy,m=a<1?Math.min(r,Math.round(t.term.length*a)):a;m&&(g=e._index.fuzzyGet(t.term,m))}if(f)for(const[a,m]of f){const y=a.length-t.term.length;if(!y)continue;g==null||g.delete(a);const _=d*a.length/(a.length+.3*y);B(e,t.term,a,_,m,o,u,h,p)}if(g)for(const a of g.keys()){const[m,y]=g.get(a);if(!y)continue;const _=c*a.length/(a.length+y);B(e,t.term,a,_,m,o,u,h,p)}return p},X=(e,t,s={})=>{if(typeof t!="string"){const d={...s,...t,queries:void 0},l=t.queries.map(p=>X(e,p,d));return Y(l,d.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:h}=i,c=r(t).flatMap(d=>h(d)).filter(d=>!!d).map(ft(i)).map(d=>At(e,d,i));return Y(c,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),o=[];for(const[u,{score:i,terms:r,match:h}]of n){const c=r.length,d={id:e._documentIds.get(u),score:i*c,terms:Object.keys(h),match:h};Object.assign(d,e._storedFields.get(u)),(s.filter==null||s.filter(d))&&o.push(d)}return o.sort(G),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of K(e,t,s)){const r=i.join(" "),h=n.get(r);h!=null?(h.score+=u,h.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:h}]of n)o.push({suggestion:u,terms:r,score:i/h});return o.sort(G),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:h,serializationVersion:c},d)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const l=new Et(d);l._documentCount=t,l._nextId=s,l._documentIds=k(n),l._idToShortId=new Map,l._fieldIds=o,l._fieldLength=k(u),l._avgFieldLength=i,l._storedFields=k(r),l._dirtCount=h||0,l._index=new C;for(const[p,f]of l._documentIds)l._idToShortId.set(f,p);for(const[p,f]of e){const g=new Map;for(const a of Object.keys(f)){let m=f[a];c===1&&(m=m.ds),g.set(parseInt(a,10),k(m))}l._index.set(p,g)}return l},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,d=!1)=>{let l="";i===0?l=c.length>20?`… ${c.slice(-20)}`:c:d?l=c.length+i>100?`${c.slice(0,100-i)}… `:c:l=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,l&&o.push(l),i+=l.length,d||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let h=s.indexOf(n,u);if(h===-1)return null;for(;h>=0;){const c=h+n.length;if(r(e.slice(u,h)),u=c,i>100)break;h=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,h=u.includes("@"),c=u.includes("#"),[d,l]=u.split(/[#@]/),{contents:p}=n[d]??={title:"",contents:[]};if(h)p.push([{type:"customField",key:d,index:l,display:i.map(f=>o.c.map(g=>j(g,f))).flat().filter(f=>f!==null)},r]);else{const f=i.map(g=>j(o.h,g)).filter(g=>g!==null);if(f.length&&p.push([{type:c?"heading":"title",key:d,...c&&{anchor:l},display:f},r]),"t"in o)for(const g of o.t){const a=i.map(m=>j(g,m)).filter(m=>m!==null);a.length&&p.push([{type:"text",key:d,...c&&{anchor:l},display:a},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=it(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":109,\"nextId\":109,\"documentIds\":{\"0\":\"v-e8197bce\",\"1\":\"v-e8197bce#common-core\",\"2\":\"v-e8197bce#版本更新记录\",\"3\":\"v-e8197bce#common\",\"4\":\"v-e8197bce#介绍\",\"5\":\"v-e8197bce#操作\",\"6\":\"v-e8197bce#扩展类\",\"7\":\"v-e8197bce#字符串扩展\",\"8\":\"v-e8197bce#时间扩展\",\"9\":\"v-e8197bce#json扩展\",\"10\":\"v-e8197bce#decimal扩展\",\"11\":\"v-e8197bce#enumerable扩展\",\"12\":\"v-e8197bce#枚举扩展\",\"13\":\"v-e8197bce#datatable扩展\",\"14\":\"v-e8197bce#编码扩展\",\"15\":\"v-e8197bce#base64扩展\",\"16\":\"v-e8197bce#集合扩展\",\"17\":\"v-e8197bce#帮助类\",\"18\":\"v-e8197bce#公共帮助类\",\"19\":\"v-e8197bce#myhttpcontext帮助类\",\"20\":\"v-e8197bce#session帮助类\",\"21\":\"v-e8197bce#表达式树\",\"22\":\"v-e8197bce#编码操作类\",\"23\":\"v-e8197bce#html\",\"24\":\"v-e8197bce#汉字转拼音\",\"25\":\"v-e8197bce#雪花id\",\"26\":\"v-e8197bce#性能检测\",\"27\":\"v-e8197bce#配置读取\",\"28\":\"v-e8197bce#公共返回类\",\"29\":\"v-e8197bce#依赖注入批量注册\",\"30\":\"v-e8197bce#io帮助类\",\"31\":\"v-e8197bce#版本更新记录-1\",\"32\":\"v-e8197bce#介绍-1\",\"33\":\"v-e8197bce#操作-1\",\"34\":\"v-e8197bce#扩展类-1\",\"35\":\"v-e8197bce#httpcontext扩展\",\"36\":\"v-e8197bce#帮助类-1\",\"37\":\"v-e8197bce#myhttpcontext帮助类-1\",\"38\":\"v-e8197bce#session帮助类-1\",\"39\":\"v-e8197bce#配置读取-1\",\"40\":\"v-e8197bce#公共返回类-1\",\"41\":\"v-e8197bce#自定义结果过滤器\",\"42\":\"v-e8197bce#自定义模型验证\",\"43\":\"v-e8197bce#全局异常处理\",\"44\":\"v-e8197bce#依赖注入批量注册-1\",\"45\":\"v-e8197bce#版本更新记录-2\",\"46\":\"v-e8197bce#介绍-2\",\"47\":\"v-e8197bce#使用\",\"48\":\"v-e8197bce#版本更新记录-3\",\"49\":\"v-e8197bce#common-cache-memorycache\",\"50\":\"v-e8197bce#操作例子\",\"51\":\"v-e8197bce#版本更新记录-4\",\"52\":\"v-e8197bce#common-cache-redis\",\"53\":\"v-e8197bce#操作例子-1\",\"54\":\"v-e8197bce#版本更新记录-5\",\"55\":\"v-e8197bce#common-cache-csredis\",\"56\":\"v-e8197bce#操作例子-2\",\"57\":\"v-e8197bce#版本更新记录-6\",\"58\":\"v-e8197bce#common-efcore\",\"59\":\"v-e8197bce#操作例子-3\",\"60\":\"v-e8197bce#版本更新记录-7\",\"61\":\"v-e8197bce#common-efcore-inmemory\",\"62\":\"v-e8197bce#操作例子-4\",\"63\":\"v-e8197bce#版本更新记录-8\",\"64\":\"v-e8197bce#common-efcore-mysql\",\"65\":\"v-e8197bce#操作例子-5\",\"66\":\"v-e8197bce#版本更新记录-9\",\"67\":\"v-e8197bce#common-efcore-postgressql\",\"68\":\"v-e8197bce#操作例子-6\",\"69\":\"v-e8197bce#版本更新记录-10\",\"70\":\"v-e8197bce#common-efcore-sqlite\",\"71\":\"v-e8197bce#操作例子-7\",\"72\":\"v-e8197bce#版本更新记录-11\",\"73\":\"v-e8197bce#common-efcore-sqlserver\",\"74\":\"v-e8197bce#操作例子-8\",\"75\":\"v-e8197bce#版本更新记录-12\",\"76\":\"v-e8197bce#common-efcoreconfigurations-弃用\",\"77\":\"v-e8197bce#操作例子-9\",\"78\":\"v-e8197bce#版本更新记录-13\",\"79\":\"v-e8197bce#common-sqlsugar\",\"80\":\"v-e8197bce#操作例子-10\",\"81\":\"v-e8197bce#版本更新记录-14\",\"82\":\"v-e8197bce#common-sqlsugarquery\",\"83\":\"v-e8197bce#操作例子-11\",\"84\":\"v-e8197bce#版本更新记录-15\",\"85\":\"v-e8197bce#common-httpclients\",\"86\":\"v-e8197bce#操作例子-12\",\"87\":\"v-e8197bce#postformdata\",\"88\":\"v-e8197bce#版本更新记录-16\",\"89\":\"v-e8197bce#common-restsharpclient\",\"90\":\"v-e8197bce#操作例子-13\",\"91\":\"v-e8197bce#版本更新记录-17\",\"92\":\"v-e8197bce#common-email\",\"93\":\"v-e8197bce#操作例子-14\",\"94\":\"v-e8197bce#版本更新记录-18\",\"95\":\"v-e8197bce#common-jwttoken\",\"96\":\"v-e8197bce#操作例子-15\",\"97\":\"v-e8197bce#版本更新记录-19\",\"98\":\"v-e8197bce#common-qrcode\",\"99\":\"v-e8197bce#操作例子-16\",\"100\":\"v-e8197bce#版本更新记录-20\",\"101\":\"v-e8197bce#common-yuquesdk\",\"102\":\"v-e8197bce#介绍-3\",\"103\":\"v-e8197bce#功能\",\"104\":\"v-e8197bce#操作-2\",\"105\":\"v-e8197bce#用户\",\"106\":\"v-e8197bce#文档\",\"107\":\"v-e8197bce#版本更新记录-21\",\"108\":\"v-e8197bce#common-aliyunsms-未发布\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[2],\"2\":[1,20],\"3\":[1],\"4\":[1,1],\"5\":[1],\"6\":[1],\"7\":[1,42],\"8\":[1,65],\"9\":[1,21],\"10\":[1,15],\"11\":[1,18],\"12\":[1,21],\"13\":[1,16],\"14\":[1,14],\"15\":[1,14],\"16\":[1,7],\"17\":[1],\"18\":[1,16],\"19\":[1,6],\"20\":[1,18],\"21\":[1,3],\"22\":[1,8],\"23\":[1,5],\"24\":[1,8],\"25\":[1,46],\"26\":[1,3],\"27\":[1,23],\"28\":[1,90],\"29\":[1,20],\"30\":[1,4],\"31\":[1,103],\"32\":[1,2],\"33\":[1],\"34\":[1],\"35\":[1,7],\"36\":[1],\"37\":[1,6],\"38\":[1,18],\"39\":[1,9],\"40\":[1,90],\"41\":[1,13],\"42\":[1,84],\"43\":[1,69],\"44\":[1,27],\"45\":[1,48],\"46\":[1,1],\"47\":[1,17],\"48\":[1,6],\"49\":[3],\"50\":[1,7],\"51\":[1,15],\"52\":[3],\"53\":[1,11],\"54\":[1,6],\"55\":[3],\"56\":[1,14],\"57\":[1,6],\"58\":[2],\"59\":[1,21],\"60\":[1,49],\"61\":[3],\"62\":[1],\"63\":[1,24],\"64\":[3],\"65\":[1],\"66\":[1,25],\"67\":[3],\"68\":[1],\"69\":[1,23],\"70\":[3],\"71\":[1],\"72\":[1,25],\"73\":[3],\"74\":[1],\"75\":[1,15],\"76\":[4],\"77\":[1,7],\"78\":[1,4],\"79\":[2],\"80\":[1,12],\"81\":[1,8],\"82\":[2],\"83\":[1,13],\"84\":[1,15],\"85\":[2],\"86\":[1,5],\"87\":[1,37],\"88\":[1,25],\"89\":[2],\"90\":[1,5],\"91\":[1,19],\"92\":[2],\"93\":[1,19],\"94\":[1,7],\"95\":[2],\"96\":[1,14],\"97\":[1,19],\"98\":[2],\"99\":[1,5],\"100\":[1,4],\"101\":[2],\"102\":[1,17],\"103\":[1,25],\"104\":[1,20],\"105\":[1,9],\"106\":[1,18],\"107\":[1,6],\"108\":[4,1]},\"averageFieldLength\":[1.2935779816513762,19.632419889130656],\"storedFields\":{\"0\":{\"h\":\"公共核心库\"},\"1\":{\"h\":\"Common.Core\"},\"2\":{\"h\":\"版本更新记录\",\"t\":[\"1.0.4\",\"迁移base64的扩展到StringExtension，并且改名为ToBase64Encode、FromBase64Decode\",\"增加时间段和时间点相互转换代码\",\"1.0.3\",\"增加任务运行时间限制方法，TaskHelper.RunTimeLimitAsync\",\"增加字符串输出扩展\",\"1.0.2\",\"增加本地日志文件操作类\",\"1.0.1\",\"引用Newtonsoft.Json包，增加json操作扩展\",\"将扩展方法的命名空间改为Common.Extension\",\"1.0.0\",\"将common中的部分类移动到该类库中\"]},\"3\":{\"h\":\"Common\"},\"4\":{\"h\":\"介绍\",\"t\":[\"常见的公共类封住\"]},\"5\":{\"h\":\"操作\"},\"6\":{\"h\":\"扩展类\"},\"7\":{\"h\":\"字符串扩展\",\"t\":[\"//判断字符串是否是数值类型 bool IsIntFormat(this string str) // 判断字符串是否是decimal类型 bool IsDecimalFormat(this string str) //判断字符串是否是日期类型 bool IsDateFormat(this string str) //判断字符串是否包含中文 bool HasChinese(this string str) //判断字符串不是 null、空和空白字符 bool IsNotNullOrWhiteSpace(this string currentString) //判断字符串 是 null、空和空白字符 bool IsNullOrWhiteSpace(this string currentString) //判断字符串是 null、空 bool IsNullOrEmpty(this string currentString) //判断字符串不是 null、空 bool IsNotNullOrEmpty(this string currentString) //字符串分割成字符串数组 string[] ToStrArray(this string str, string separator = \\\",\\\") //根据条件拼接字符串 StringBuilder AppendIF(this StringBuilder builder, bool condition, string str) //获取特定位置的字符串 string GetByIndex(this string str, int index) //忽略大小写的字符串比较 bool EqualsNoCase(this string aimStr, string comparaStr) \"]},\"8\":{\"h\":\"时间扩展\",\"t\":[\"//获取这个月第一天 DateTime GetThisMonth(this DateTime dateTime) //获取下个月第一天 DateTime GetNextMonth(this DateTime dateTime) //获取最后一个月一号 DateTime GetLastMonth(this DateTime dateTime) //获取今天凌晨0时 DateTime GetToday(this DateTime dateTime) //获取今天晚上23:59:59 DateTime GetTodayEndTime(this DateTime dateTime) //获取昨天零时 DateTime GetYesterday(this DateTime dateTime) //获取明天零时 DateTime GetTomorrow(this DateTime dateTime) //获取时间戳(true:获取秒 false:获取毫秒) long GetUnixTime(bool isSeconds);//DateTimeOffset //时间戳转本地时间-时间戳精确到秒 var datetime1 = unixSecond.ToLocalTimeDateBySeconds(); //时间转时间戳Unix-时间戳精确到秒 var unixSecond2 = DateTime.Now.ToUnixTimestampBySeconds();//DateTime //获取毫秒时间戳 var unixMillisecond = TimeExtensions.GetUnixTimeMilliseconds();//DateTimeOffset //时间转时间戳Unix-时间戳精确到毫秒 var unixMillisecond2 = DateTime.Now.ToUnixTimestampByMilliseconds();//DateTime //时间转时间戳Unix-时间戳精确到秒 var datetime2= unixMillisecond.ToLocalTimeDateByMilliseconds(); //当前时间是否周末 bool IsWeekend(this DateTime dateTime) //当前时间是否是工作日 bool IsWeekday(this DateTime dateTime) //自定义时间格式，默认返回返回格式：2019-01-21 20:57:51 string ToStandardString(this DateTime time, string format) //自定义时间格式，默认返回返回格式：2019-01-21 20:57:51 string ToStandardString(this DateTime time) \"]},\"9\":{\"h\":\"Json扩展\",\"t\":[\"//对象转json字符串 string ToJson(this object obj) //对象转json字符串 string ToJson(this object obj, string datetimeFormats) //json字符串转对象 T ToObject<T>(this string json) //json字符串转list List<T> ToList<T>(this string json) //json字符串转DataTable DataTable ToTable(this string json) //json字符串转JObject JObject ToJObject(this string json) \"]},\"10\":{\"h\":\"Decimal扩展\",\"t\":[\"//自定义格式，默认返回返回格式：1.01 string ToDecimalStandardString(this decimal dec, int number) // 自定义格式，默认返回返回格式：1.01 string ToDecimalStandardString(this decimal dec) //自定义格式，不保留小数点后的0 string ToDecimalNoZeroString(this decimal dec, int number = 1) \"]},\"11\":{\"h\":\"Enumerable扩展\",\"t\":[\"//检查集合是null或者空 bool IsNullOrEmpty<T>(this IEnumerable<T> source) //检查集合不是null或者空 bool IsNotNullOrEmpty<T>(this IEnumerable<T> source) //带条件的where IQueryable<T> WhereIF<T>(this IQueryable<T> source, bool condition, Expression<Func<T, bool>> predicate) //带条件的where IEnumerable<T> WhereIF<T>(this IEnumerable<T> source, bool condition, Func<T, bool> predicate) \"]},\"12\":{\"h\":\"枚举扩展\",\"t\":[\"//获取枚举描述 string GetDescriptionString(this Enum enumItem) //根据Description获取枚举值 T GetEnumValue<T>(string description) // 获取字段Description DescriptionAttribute[] GetDescriptAttr(this FieldInfo fieldInfo) //枚举转字典 Dictionary<int, string> EnumToDictionary<T>() where T : Enum \"]},\"13\":{\"h\":\"DataTable扩展\",\"t\":[\"//IList To DataTable DataTable ToDataTable(this IList list, bool hasColumns = true) //List To DataTable DataTable ToDataTable<T>(this List<T> list, bool hasColumns = true) //将List追加到其他DataTable DataTable ToDataTable(this IList list, DataTable table, bool hasColumns = true) \"]},\"14\":{\"h\":\"编码扩展\",\"t\":[\"//获取字符串里面的URL地址 string GetUrl(this string str) //UrlEncode string UrlEncode(this string target) string UrlEncode(this string target, Encoding encoding) //UrlDecode string UrlDecode(this string target) string UrlDecode(this string target, Encoding encoding) //AttributeEncode string AttributeEncode(this string target) //HtmlEncode string HtmlEncode(this string target) string HtmlDecode(this string target) \"]},\"15\":{\"h\":\"Base64扩展\",\"t\":[\"//Base64编码，采用utf8编码方式加密 string Base64Encode(this string source) //Base64解密，采用utf8编码方式解密 string Base64Decode(this string result) //Base64编码 string Base64Encode(Encoding encodeType, string source) //Base64解码 string Base64Decode(Encoding encodeType, string result) \"]},\"16\":{\"h\":\"集合扩展\",\"t\":[\" bool IsNullOrEmpty<T>(this ICollection<T> source) //检查集合是否存在元素 \"]},\"17\":{\"h\":\"帮助类\"},\"18\":{\"h\":\"公共帮助类\",\"t\":[\"//根据时间自动生成编号 201008251145409865 string CreateNo() //生成0-9随机数 string RndNum(int codeNum) 随机数(示例：e/6LMJB+zyHK6iCcgOAZgu7dkE9fvBkAbAIy3pIE3RY=) //string GenerateRandomNumber(int len) \"]},\"19\":{\"h\":\"MyHttpContext帮助类\",\"t\":[\"需要提前注册：MyHttpContext.ServiceProvider=xxxServiceProvider\",\"//获取HttpContext MyHttpContext.Current \"]},\"20\":{\"h\":\"Session帮助类\",\"t\":[\"使用SessionHelper需要提前注册MyHttpContext.ServiceProvider\",\"//设置session void SetSession(string key, string value) void SetSession<T>(string key, T value) //获取Session string GetSession(string key) T GetSession<T>(string key) //移除session void Remove(params string[] keys) \"]},\"21\":{\"h\":\"表达式树\",\"t\":[\"PredicateExtensions.True \"]},\"22\":{\"h\":\"编码操作类\",\"t\":[\"//字符串转Unicode码 string StringToUnicode(string value) //Unicode转字符串 string UnicodeToString(string unicode) \"]},\"23\":{\"h\":\"HTML\",\"t\":[\"//将HTML标签转换成TEXT文本 string HtmlToText(string strHtml) \"]},\"24\":{\"h\":\"汉字转拼音\",\"t\":[\"PinYinHelper\",\"//汉字转化为大写拼音 string GetPinyinQuanPin(string str) //汉字转化为拼音大写首字母 string GetFirstPinyin(string str) \"]},\"25\":{\"h\":\"雪花Id\",\"t\":[\"Snowflake snowflake = new Snowflake(); // snowflake.Sequence = 10;//设置序列 var id = snowflake.NewId();//获取下一个ID Console.WriteLine(id); Console.WriteLine(snowflake.NewId(DateTime.Now.AddDays(1)));//获取指定时间的Id，带上节点和序列号。可用于根据业务时间构造插入Id Console.WriteLine(snowflake.GetId(DateTime.Now.AddDays(1)));//时间转为Id，不带节点和序列号。可用于构建时间片段查询 var flag = snowflake.TryParse(id, out DateTime time, out int worlId, out int sequence);//尝试分析 Console.WriteLine($\\\"time:{time} workId:{worlId} sequence:{sequence}\\\"); \",\"输出结果\",\"6900931916313923585 6901294304267603970 6901294304266813440 time:2022/2/19 22:39:41 workId:193 sequence:1 \"]},\"26\":{\"h\":\"性能检测\",\"t\":[\"来自老赵的性能检测帮助类\",\"CodeTimerHelper \"]},\"27\":{\"h\":\"配置读取\",\"t\":[\"首先先配置IConfiguration\",\"//.net6之前 public Startup(IConfiguration configuration, IWebHostEnvironment env) { Configuration = configuration; Env = env; AppSettings.InitConfiguration(configuration); } // .net6 AppSettings.InitConfiguration(builder.Configuration); \",\"使用方法\",\"var name = AppSettings.GetValue(\\\"Service:Name\\\"); var name = AppSettings.GetValue<string>(\\\"Service:Name\\\"); \"]},\"28\":{\"h\":\"公共返回类\",\"t\":[\"封装了公共的返回类\",\"IResultModel IResultModel<T> ResultModel:IsSuccess、Code、Message、Errors ResultModel<T>：IsSuccess、Code、Message、Data \",\"属性描述\",\"IsSuccess：是否成功 Code:状态码 Data:返回的数据 Errors：模型校验的错误信息\",\"返回正确的方法\",\"[HttpGet] public IResultModel<IEnumerable<WeatherForecast>> Get() { var result = Enumerable.Range(1, 3).Select(index => new WeatherForecast { Date = DateTime.Now.AddDays(index), TemperatureC = Random.Shared.Next(-20, 55), Summary = Summaries[Random.Shared.Next(Summaries.Length)] }) .ToArray(); return ResultModel<IEnumerable<WeatherForecast>>.Success(result); } \",\"返回的示例效果\",\"{ \\\"data\\\": [ { \\\"date\\\": \\\"2022-05-20T22:13:35.2501522+08:00\\\", \\\"temperatureC\\\": 52, \\\"temperatureF\\\": 125, \\\"summary\\\": \\\"Freezing\\\" }, { \\\"date\\\": \\\"2022-05-21T22:13:35.2505438+08:00\\\", \\\"temperatureC\\\": 4, \\\"temperatureF\\\": 39, \\\"summary\\\": \\\"Balmy\\\" }, { \\\"date\\\": \\\"2022-05-24T22:13:35.250546+08:00\\\", \\\"temperatureC\\\": 7, \\\"temperatureF\\\": 44, \\\"summary\\\": \\\"Hot\\\" } ], \\\"isSuccess\\\": true, \\\"code\\\": \\\"200\\\", \\\"message\\\": \\\"success\\\", \\\"errors\\\": [] } \",\"返回错误的效果\",\"[HttpGet] public IResultModel<IEnumerable<WeatherForecast>> Get() { return ResultModel<IEnumerable<WeatherForecast>>.Error(\\\"参数为空\\\", \\\"400\\\"); } \",\"返回结果\",\"{ \\\"data\\\": null, \\\"isSuccess\\\": false, \\\"code\\\": \\\"400\\\", \\\"message\\\": \\\"参数为空\\\", \\\"errors\\\": [] } \"]},\"29\":{\"h\":\"依赖注入批量注册\",\"t\":[\"需要注册的实现类继承指定的接口，比如用户实现类\",\"public class UserService : IScopedDependency, IUserService \",\"也可以继承自：ITransientDependency、ISingletonDependency，根据自己需求不同继承合适声明周期的接口\",\"批量注入示例\",\"services.RegisterBusinessServices(\\\"MySQL_NetCoreAPI_EFCore.dll\\\"); 或者 services.RegisterBusinessServices(\\\"MySQL_NetCoreAPI_EFCore.*.dll\\\"); \"]},\"30\":{\"h\":\"IO帮助类\",\"t\":[\"增加创建文件、目录、xml等操作\",\" \"]},\"31\":{\"h\":\"版本更新记录\",\"t\":[\"1.4.1\",\"将Newtonsoft.Json转入core包\",\"将json序列化等操作转入core包\",\"1.4.0-beta6\",\"将部分无依赖的类移动到Common.Core中\",\"1.4.0-beta5\",\"更新时间扩展类，移除TimeExtensions合并到DateTimeExtensions\",\"1.4.0-beta4\",\"增加获取无时区时间的方案ToUnspecifiedDateTime\",\"1.4.0-beta3\",\"修改CurrentUser默认注入\",\"修改ToDateTimeString支持传入时间格式\",\"1.4.0-beta2\",\"修改CurrentUser为DefaultUser\",\"1.4.0-beta1\",\"升级支持.net7\",\"1.3.0-beta10\",\"增加IsLongFormat、ToInt64\",\"1.3.0-beta9\",\"增加appsettings、cron帮助类、HttpContextManager、HttpContextExtensions、ServiceProviderHelper、SessionHelper、ICurrentUser、BaseService\",\"1.3.0-beta8\",\"增加生成验证码的方法，CommonHelper.GenerateVerifyCode\",\"1.3.0-beta7\",\"人信息扩展\",\"正则扩展\",\"增加性能检测帮助类CodeTimerHelper\",\"1.3.0-beta6\",\"优化扩展方法命名空间，正规化\",\"增加汉字获取拼音全拼和首字母方法\",\"1.3.0-beta5\",\"将一些mvc里面的公共类迁移出来，干净common\",\"1.3.0-beta4\",\"更新session帮助类\",\"增加DataTableExtensions\",\"更新时间扩展类\",\"增加HttpContextExtensions\",\"修改md5哈希算法\",\"增加sha哈希算法\",\"1.3.0-beta3\",\"增加BaseRequestDto重载\",\"1.3.0-beta2\",\"修复BaseRequestDto<T>导致UserIdentity出错问题\",\"1.3.0-beta1\",\"支持.Net6版本\",\"更新Operator支持主键设置类型\",\"1.2.8\",\"更新字符串Null值校验\",\"增加雪花ID算法\",\"1.2.7\",\"增加.NetCore默认DI容器的批量注入方法\",\"1.2.6\",\"移除分页的相关的类\",\"增加依赖注入的类\",\"1.2.5\",\"增加生成随机数的方法\",\"增加时间戳和本地时间相互转换方法\",\"增加集合扩展\",\"增加日期扩展\",\"增加浮点数扩展\",\"增加枚举扩展类\",\"增加html帮助类\",\"增加字符串扩展类\",\"增加表达式树\",\"本次发版修改了请求类和返回类，查询包可能会受影响\",\"1.2.4\",\"更新GetQueryPageRequest、GetPageInfoRequest、SortContent增加构造函数\",\"1.2.3\",\"更新公共分页返回类\",\"1.2.2\",\"更新返回类封装，支持使用静态方法使用\",\"1.2.1\",\"更新异常类增加扩展方法\",\"修改异常监听类名称\",\"1.2.0\",\"增加枚举根据描述获取枚举值\",\"1.1.6\",\"更新net5包版本 更新OperatorProvider\",\"1.1.5\",\"配置多个目标框架，支持net5\",\"1.1.4\",\"增加分页请求类\",\"1.1.3\",\"增加layui的数据表格返回类\",\"1.1.2\",\"修改des加密方法\",\"1.1.1\",\"修改json目录，增加字符串扩展方法\",\"1.1.0\",\"修改md5加密方法\",\"1.0.3\",\"修改加密方法\",\"1.0.2\",\"增加时间公共类\",\"1.0.1\",\"修改一些文件的命名空间\",\"1.0.0\",\"基本的公共库\"]},\"32\":{\"h\":\"介绍\",\"t\":[\"常见的Asp.NetCore里面辅助方法\"]},\"33\":{\"h\":\"操作\"},\"34\":{\"h\":\"扩展类\"},\"35\":{\"h\":\"HttpContext扩展\",\"t\":[\"//获取请求的ip地址 string ReqestIp(this HttpContext httpContext) \"]},\"36\":{\"h\":\"帮助类\"},\"37\":{\"h\":\"MyHttpContext帮助类\",\"t\":[\"需要提前注册：MyHttpContext.ServiceProvider=xxxServiceProvider\",\"//获取HttpContext MyHttpContext.Current \"]},\"38\":{\"h\":\"Session帮助类\",\"t\":[\"使用SessionHelper需要提前注册MyHttpContext.ServiceProvider\",\"//设置session void SetSession(string key, string value) void SetSession<T>(string key, T value) //获取Session string GetSession(string key) T GetSession<T>(string key) //移除session void Remove(params string[] keys) \"]},\"39\":{\"h\":\"配置读取\",\"t\":[\"// 配置 AppSettings.Configuration=Configuration; //查询指定的配置信息 string GetValue(params string[] sections) \"]},\"40\":{\"h\":\"公共返回类\",\"t\":[\"封装了公共的返回类\",\"IResultModel IResultModel<T> ResultModel:IsSuccess、Code、Message、Errors ResultModel<T>：IsSuccess、Code、Message、Data \",\"属性描述\",\"IsSuccess：是否成功 Code:状态码 Data:返回的数据 Errors：模型校验的错误信息\",\"返回正确的方法\",\"[HttpGet] public IResultModel<IEnumerable<WeatherForecast>> Get() { var result = Enumerable.Range(1, 3).Select(index => new WeatherForecast { Date = DateTime.Now.AddDays(index), TemperatureC = Random.Shared.Next(-20, 55), Summary = Summaries[Random.Shared.Next(Summaries.Length)] }) .ToArray(); return ResultModel<IEnumerable<WeatherForecast>>.Success(result); } \",\"返回的示例效果\",\"{ \\\"data\\\": [ { \\\"date\\\": \\\"2022-05-20T22:13:35.2501522+08:00\\\", \\\"temperatureC\\\": 52, \\\"temperatureF\\\": 125, \\\"summary\\\": \\\"Freezing\\\" }, { \\\"date\\\": \\\"2022-05-21T22:13:35.2505438+08:00\\\", \\\"temperatureC\\\": 4, \\\"temperatureF\\\": 39, \\\"summary\\\": \\\"Balmy\\\" }, { \\\"date\\\": \\\"2022-05-24T22:13:35.250546+08:00\\\", \\\"temperatureC\\\": 7, \\\"temperatureF\\\": 44, \\\"summary\\\": \\\"Hot\\\" } ], \\\"isSuccess\\\": true, \\\"code\\\": \\\"200\\\", \\\"message\\\": \\\"success\\\", \\\"errors\\\": [] } \",\"返回错误的效果\",\"[HttpGet] public IResultModel<IEnumerable<WeatherForecast>> Get() { return ResultModel<IEnumerable<WeatherForecast>>.Error(\\\"参数为空\\\", \\\"400\\\"); } \",\"返回结果\",\"{ \\\"data\\\": null, \\\"isSuccess\\\": false, \\\"code\\\": \\\"400\\\", \\\"message\\\": \\\"参数为空\\\", \\\"errors\\\": [] } \"]},\"41\":{\"h\":\"自定义结果过滤器\",\"t\":[\"通过自定义结果过滤器来默认给所有接口最外层包装一层返回类\",\"services.AddControllers(options => { options.Filters.Add(typeof(CustomResultPackFilter)); }); \",\"若是有些Action不想包装一层，只需要标注特性即可在返回的时候不显示包装的一层\",\"[NoWrapperAttribute] \"]},\"42\":{\"h\":\"自定义模型验证\",\"t\":[\"因为默认是启用模型校验的，所以当你传的model参数有问题的时候，还未到达action的时候已经处理了校验。\",\"举例，当我们有一个post的接口，入参为\",\"public class Userinfo { [Required] [MinLength(5)] public string Id { get; set; } [MinLength(6)] public string Name { get; set; } } \",\"当传输不符合条件的数据时候返回的状态码是400，效果如下\",\"{ \\\"type\\\": \\\"https://tools.ietf.org/html/rfc7231#section-6.5.1\\\", \\\"title\\\": \\\"One or more validation errors occurred.\\\", \\\"status\\\": 400, \\\"traceId\\\": \\\"00-40ff21ce6815e3b18232fa00f2024f67-84a9ab2db0b01cc9-00\\\", \\\"errors\\\": { \\\"Id\\\": [ \\\"The Id field is required.\\\" ], \\\"Name\\\": [ \\\"The field Name must be a string or array type with a minimum length of '6'.\\\" ] } } \",\"这个效果是不方便前端处理的，所以我们使用的，所以我们自己做模型校验来封装错误信息\",\"注意：需要先关闭默认的模型校验。\",\"在ConfigureServices中注册自定义模型验证过滤器并禁用默认的自动模型验证\",\"services.AddControllers(options => { options.Filters.Add<ModelVerifyFilter>(); //注册模型校验过滤器 }).ConfigureApiBehaviorOptions(options => { //[ApiController] 默认自带有400模型验证，且优先级比较高，如果需要自定义模型验证，则需要先关闭默认的模型验证 options.SuppressModelStateInvalidFilter = true; }); \",\"我们再次调用接口\",\"{ \\\"isSuccess\\\": false, \\\"code\\\": \\\"400\\\", \\\"message\\\": \\\"参数格式不正确\\\", \\\"errors\\\": [ { \\\"field\\\": \\\"Id\\\", \\\"message\\\": \\\"The Id field is required.\\\" }, { \\\"field\\\": \\\"Name\\\", \\\"message\\\": \\\"The field Name must be a string or array type with a minimum length of '6'.\\\" } ] } \",\"这时候我们的错误信息会显示到error属性里面并且http错误码为400。\"]},\"43\":{\"h\":\"全局异常处理\",\"t\":[\"使用全局异常处理中间件来处理异常\",\"var app = builder.Build(); if (app.Environment.IsDevelopment()) { app.UseSwagger(); app.UseSwaggerUI(); } //使用异常中间件 app.UseCustomExceptionMiddleware(); app.UseAuthorization(); app.MapControllers(); app.Run(); \",\"编写一个接口抛出异常\",\"[HttpGet] public IEnumerable<WeatherForecast> Get() { throw new ParameterException(\\\"参数有误\\\"); return Enumerable.Range(1, 5).Select(index => new WeatherForecast { Date = DateTime.Now.AddDays(index), TemperatureC = Random.Shared.Next(-20, 55), Summary = Summaries[Random.Shared.Next(Summaries.Length)] }) .ToArray(); } \",\"返回结果\",\"{ \\\"isSuccess\\\": false, \\\"code\\\": \\\"\\\", \\\"message\\\": \\\"参数有误\\\", \\\"errors\\\": [] } \",\"支持抛出异常类型\",\"//500 自定义错误 BaseCustomerException //500 系统异常 ServerErrorException //404 对象未找到 EntityNotFoundException //400 参数异常 ParameterException //401 身份验证失败 UserAuthException \"]},\"44\":{\"h\":\"依赖注入批量注册\",\"t\":[\"需要注册的实现类继承指定的接口，比如用户实现类\",\"public class UserService : IScopedDependency, IUserService \",\"也可以继承自：ITransientDependency、ISingletonDependency，根据自己需求不同继承合适声明周期的接口\",\"//批量注入示例 services.RegisterBusinessServices(\\\"MySQL_NetCoreAPI_EFCore.dll\\\"); 或者 services.RegisterBusinessServices(\\\"MySQL_NetCoreAPI_EFCore.*.dll\\\"); //或者使用基础的方法，让继承某一类的注入 services.RegisterUniteServices(assemblies, typeof(ISingletonDependency), ServiceLifetime.Singleton); \"]},\"45\":{\"h\":\"版本更新记录\",\"t\":[\"0.1.0-beta1\",\"升级支持.net7\",\"0.0.1-beta6\",\"考虑到该包只能在API层使用，所以移除增加appsettings、cron帮助类、HttpContextManager、HttpContextExtensions、ServiceProviderHelper、SessionHelper、ICurrentUser、BaseService到AzrngCommon包\",\"异常处理中间件增加请求日志输出\",\"优化AppSettings写法\",\"增加了如果是FileContentResult，那么就不包装返回\",\"如果没有注入配置，那么就使用默认的CommonMvcConfig配置\",\"0.0.1-beta5\",\"优化AddDefaultControllers方法，返回值修改为IMvcBuilder\",\"公共返回包装的方法优化对415错误的处理，遇到415错误的时候，直接返回不再包装\",\"0.0.1-beta4\",\"优化支持的框架版本，支持3.1、5.0、6.0\",\"增加默认的控制器处理，必须添加AddDefaultControllers操作\",\"0.0.1-beta3\",\"优化支持的框架版本，支持3.1、5.0、6.0\",\"将cors默认全部允许继承，直接使用services.AddAnyCors(); app.UseAnyCors();\",\"处理自定义模型校验返回状态码为200的错误情况\",\"处理自定义模型校验和自定义返回类一起使用导致重复包装的问题\",\"0.0.1-beat2\",\"优化扩展方法命名空间，正规化\",\"0.0.1-beta1\",\"从common里面移出来一些方法\",\"0.0.1-beta2\",\"将关于swagger的东西去掉\"]},\"46\":{\"h\":\"介绍\",\"t\":[\"该包封装了常见的加密公共类\"]},\"47\":{\"h\":\"使用\",\"t\":[\"MD5哈希算法\",\"//字符串md5哈希算法 string GetMd5Hash(this string str) //文件获取md5 string GetFileMd5Hash(string path) \",\"Sha哈希算法\",\"//获取字符串sha1值 string GetSHA1Hash(this string str) //获取字符串sha256值 string GetSHA256Hash(this string str) //获取字符串sha512值 string GetSHA512Hash(this string str) \"]},\"48\":{\"h\":\"版本更新记录\",\"t\":[\"0.0.1-beta2\",\"fix处理md5加密将16位和32位弄混问题\",\"0.0.1-beta1\",\"从common里面移出来一些方法\"]},\"49\":{\"h\":\"Common.Cache.MemoryCache\"},\"50\":{\"h\":\"操作例子\",\"t\":[\"1.Statrup的ConfigureServices方法添加services.AddMemoryCacheExtension(); 2.在需要使用的地方进行注入：IMemoryCachimg \"]},\"51\":{\"h\":\"版本更新记录\",\"t\":[\"1.3.0-beat1\",\"方法名字统一处理\",\"1.2.0\",\"升级支持.net7\",\"1.1.1\",\"优化代码，支持.net6\",\"增加GetOrCreate方法\",\"修改接口名称为ICache\",\"1.1.0\",\"更新版本为5.0\",\"1.0.1\",\"3.1版本的内存缓存\",\"1.0.0\",\"3.1版本的内存缓存\"]},\"52\":{\"h\":\"Common.Cache.Redis\"},\"53\":{\"h\":\"操作例子\",\"t\":[\"1.Statrup的ConfigureServices方法添加services.AddRedisCacheService(\\\"XXX:6379,password=XXX,defaultdatabase=1\\\"); 2.在需要使用的地方进行注入：IRedisCacheManager \"]},\"54\":{\"h\":\"版本更新记录\",\"t\":[\"1.0.0 3.1版本的redis公共库 1.1.0 更新版本为5.0 1.1.1 修改redis操作管理类\"]},\"55\":{\"h\":\"Common.Cache.CSRedis\"},\"56\":{\"h\":\"操作例子\",\"t\":[\" services.AddRedisCacheService(() => new RedisConfig { ConnectionString = \\\"xxxx:6379,password=xxxx,defaultDatabase=0\\\", InstanceName = \\\"prefix\\\" }); \"]},\"57\":{\"h\":\"版本更新记录\",\"t\":[\"1.0.0 基本增删查封装 1.0.1 修改查询数值为null报错 1.0.2 增加了一些hash的操作\"]},\"58\":{\"h\":\"Common.EFCore\"},\"59\":{\"h\":\"操作例子\",\"t\":[\"只是包含EFCore公共Base类\",\"Statrup的ConfigureServices方法添加\",\"services.AddAutoGenerationId(); //增加自增ID \",\"继承公共基类\",\"IdentityBaseEntity、IdentityBaseEntity<TKey> IdentityOperatorEntity、IdentityOperatorEntity<Tkey> IdentityOperatorStatusEntity、 IdentityOperatorStatusEntity<TKey> \",\"模型配置继承\",\"EntityTypeConfigurationIdentity、EntityTypeConfigurationIdentity<T, TKey> EntityTypeConfigurationIdentityOperator、EntityTypeConfigurationIdentityOperator<T,TKey> EntityTypeConfigurationIdentityOperatorStatus、EntityTypeConfigurationIdentityOperatorStatus<T, TKey> \"]},\"60\":{\"h\":\"版本更新记录\",\"t\":[\"1.2.0\",\"GetPageRequest增加一个查询关键字\",\"将EFCoreExtension内容迁移到工作单元下\",\"工作单元类需要单独注入，如services.AddUnitOfWork<BaseDbContext>();\",\"1.2.0-beta2\",\"将创建时间修改时间等改为传入方案，用来应对pgsql的时间区分有时区无时区方案\",\"1.2.0-beta1\",\"升级支持.net7\",\"1.0.0-beta8\",\"增加表达式树扩展方法，替换nuget包System.Linq.Dynamic.Core\",\"1.0.0-beta7\",\"增加执行SQL扩展\",\"增加非追踪\",\"1.0.0-beta5\",\"更新注册的方法从AddEntityBase变更为AddIdHelper()\",\"1.0.0-beta4\",\"支持主键自定义类型\",\"1.1.0-beta3\",\"增加分页相关的类\",\"去除common包的依赖\",\"1.1.0-beta2\",\"更新因为Common包升级导致的问题\",\"1.1.0-beta1\",\"修改版本支持.net5、.net6、.netstandard2.1\",\"修改OrderBy排序方法\",\"1.0.6\",\"修改QueryableExtensions扩展，分页支持返回总条数，如果参数错误抛出异常\",\"1.0.5\",\"修改QueryableExtensions扩展\",\"1.0.4\",\"增加默认注入，支持单独使用该库的model类AddEntityBase\",\"主键ID修改类型为long类型\",\"1.0.3\",\"基本的base类封装\",\"IBaseRepository接口编写\",\"工作单元封装\"]},\"61\":{\"h\":\"Common.EFCore.InMemory\"},\"62\":{\"h\":\"操作例子\"},\"63\":{\"h\":\"版本更新记录\",\"t\":[\"1.2.0\",\"优化注入服务的方法\",\"1.2.0-beta1\",\"升级支持.net7\",\"1.1.0-beta5\",\"增加非追踪\",\"1.0.0-beta4\",\"修改注入方法名称为AddEntityFramework\",\"1.1.0-beta3\",\"增加分页相关的类\",\"去除common包的依赖\",\"1.1.0-beta2\",\"更新因为Common包升级导致的问题\",\"1.1.0-beta1\",\"修改版本支持.net5、.net6、.netstandard2.1\",\"1.0.3\",\"更新分页入参\",\"1.0.2\",\"更新包版本\",\"1.0.1\",\"基本操作内存数据库的封住哪个\"]},\"64\":{\"h\":\"Common.EFCore.MySQL\"},\"65\":{\"h\":\"操作例子\"},\"66\":{\"h\":\"版本更新记录\",\"t\":[\"1.2.0\",\"优化注入服务逻辑\",\"1.1.0\",\"升级支持.Net7\",\"修复迁移的时候自定义配置未生效问题\",\"1.1.0-beta5\",\"增加非追踪\",\"1.1.0-beta4\",\"修改注入方法名称为AddEntityFramework\",\"1.1.0-beta3\",\"增加分页相关的类\",\"去除common包的依赖\",\"1.1.0-beta2\",\"更新因为Common包升级导致的问题\",\"1.1.0-beta1\",\"修改版本支持.net5、.net6、.netstandard2.1\",\"更新组件包版本\",\"0.0.3\",\"更新分页入参\",\"0.0.2\",\"封装简单方法\"]},\"67\":{\"h\":\"Common.EFCore.PostgresSQL\"},\"68\":{\"h\":\"操作例子\"},\"69\":{\"h\":\"版本更新记录\",\"t\":[\"1.2.0\",\"移除工作单元注入\",\"1.2.0-beta2\",\"新增设置时区的扩展方法\",\"同步支持Common.EFCore设置时间方案\",\"1.2.0-beta1\",\"升级支持.net7\",\"1.1.0-beta4\",\"增加非追踪\",\"1.1.0-beta3\",\"修改注入方法名称为AddEntityFramework\",\"1.0.0-beta2\",\"解决不显示主键类型\",\"1.0.0-beta1\",\"修改版本支持.net5、.net6、.netstandard2.1\",\"0.0.3\",\"更新分页入参\",\"0.0.2\",\"封装简单方法\"]},\"70\":{\"h\":\"Common.EFCore.SQLite\"},\"71\":{\"h\":\"操作例子\"},\"72\":{\"h\":\"版本更新记录\",\"t\":[\"1.2.0\",\"移除工作单元注入\",\"1.1.2\",\"修复迁移的时候自定义配置未生效问题\",\"1.1.1\",\"移除Zack.EFCore.Batch.Sqlite_NET6包\",\"1.1.0\",\"升级包版本，支持.net6、.net7\",\"1.0.0-beta3\",\"升级包版本，支持.netstandard2.1和.net5以及.net6\",\"1.1.0-beta2\",\"增加非追踪\",\"1.0.0-beta1\",\"修改注入方法名称为AddEntityFramework\",\"0.0.3\",\"更新分页入参\",\"0.0.2\",\"封装简单方法\"]},\"73\":{\"h\":\"Common.EFCore.SQLServer\"},\"74\":{\"h\":\"操作例子\"},\"75\":{\"h\":\"版本更新记录\",\"t\":[\"1.0.0-beta3\",\"升级包版本，支持.net5和.net6\",\"1.1.0-beta2\",\"增加非追踪\",\"1.0.0-beta1\",\"修改注入方法名称为AddEntityFramework\",\"0.0.3\",\"更新分页入参\",\"0.0.2\",\"封装简单方法\"]},\"76\":{\"h\":\"Common.EFCoreConfigurations(弃用)\"},\"77\":{\"h\":\"操作例子\",\"t\":[\"services.AddMySQLService<OpenDbContext>(Configuration[\\\"DbConfig:Mysql:ConnectionString\\\"]); \"]},\"78\":{\"h\":\"版本更新记录\",\"t\":[\"1.0.0 基本base实体类封装 1.0.1 增加注释操作\"]},\"79\":{\"h\":\"Common.SqlSugar\"},\"80\":{\"h\":\"操作例子\",\"t\":[\"services.AddSqlSugarService(() { return new BaseQueryConfig { ConnectionString = connection, DbType = SqlSugar.DbType.MySql }; }); \"]},\"81\":{\"h\":\"版本更新记录\",\"t\":[\"1.0.0 3.1版本sqlsugar使用封装 1.1.0 更新版本为5.0 1.1.1 配置多个目标框架 1.1.2 添加扩展方法\"]},\"82\":{\"h\":\"Common.SqlSugarQuery\"},\"83\":{\"h\":\"操作例子\",\"t\":[\"services.AddSqlSugarService(() => { return new BaseQueryConfig { ConnectionString = connection, DbType = SqlSugar.DbType.MySql }; }); \"]},\"84\":{\"h\":\"版本更新记录\",\"t\":[\"1.2.0-beta1 \",\"更新包支持多个版本\",\"更新sqlsugar时间转字符串方法\",\"1.1.2 \",\"扩展方法完善\",\"1.1.1 \",\"增加sqlsugar时间、小数扩展方法，输出sql日志\",\"1.1.0 \",\"更新版本为net5.0\",\"1.0.2 \",\"3.1版本 sqlsugar和efcore结合使用\",\"1.0.0 \",\"3.1版本sqlsugar查询\"]},\"85\":{\"h\":\"Common.HttpClients\"},\"86\":{\"h\":\"操作例子\",\"t\":[\"ConfigureServices里面添加： services.AddHttpClientService(); 需要用到的地方直接注入IHttpClientHelper进行 \"]},\"87\":{\"h\":\"PostFormData\",\"t\":[\"Task<T> PostFormDataAsync<T>(string url, MultipartFormDataContent formDataContent);\",\"请求示例\",\"var bytes = await File.ReadAllBytesAsync(\\\"D:\\\\\\\\2222.png\\\"); var form = new MultipartFormDataContent(); var byteContent = new ByteArrayContent(bytes); byteContent.Headers.ContentDisposition = new ContentDispositionHeaderValue(\\\"form-data\\\") { Name = \\\"file\\\", FileName = \\\"img.png\\\" }; form.Add(byteContent, \\\"file\\\"); form.Add(new StringContent(\\\"img.png\\\"), \\\"FileName\\\"); form.Add(new StringContent(\\\"image/png\\\"), \\\"ContentType\\\"); var response = await client.PostFormDataAsync<string>(\\\"api/file\\\", form); \"]},\"88\":{\"h\":\"版本更新记录\",\"t\":[\"1.2.2\",\"增加x-www-form-urlencoded请求方式代码\",\"1.2.1\",\"增加get获取文件流的方法\",\"1.2.0\",\"升级支持.net7\",\"1.1.5\",\"修改put请求命名问题\",\"增加patch请求\",\"1.1.4\",\"处理多个构造函数的报错\",\"增加更加灵活的请求方式Send\",\"1.1.3\",\"增加http请求FormData形式去提交文件\",\"支持框架netstandard2.1、net6.0\",\"1.1.2\",\"更新post方法同时兼容string和其他类型\",\"1.1.1\",\"更新post方法,配置多个目标框架\",\"1.1.0\",\"更新框架版本为5.0\",\"1.0.0\",\"3.1版本的http请求公共库\"]},\"89\":{\"h\":\"Common.RestSharpClient\"},\"90\":{\"h\":\"操作例子\",\"t\":[\"services.AddHttpClientService(); 然后注入：IHttpClientHelper \"]},\"91\":{\"h\":\"版本更新记录\",\"t\":[\"1.0.6 \",\"增加DownloadData方法\",\"1.0.5 \",\"增加userAgent\",\"1.0.4 \",\"优化请求和删除方法\",\"1.0.3 \",\"优化方法，删除无用代码，修改最后序列化方式\",\"1.0.2 \",\"更新方法名称和增加注释\",\"1.0.1 \",\"更新post方法同时兼容string和其他类型\",\"1.0.0 \",\"版本封装get post put delete\"]},\"92\":{\"h\":\"Common.Email\"},\"93\":{\"h\":\"操作例子\",\"t\":[\"services.AddEmail(info => { info.Host = \\\"smtp.163.com\\\"; info.Post = 587; info.FromName = \\\"发送者用户名\\\"; info.FromAddress = \\\"发送者地址\\\"; info.FromPassword = \\\"发送者密码(授权码)\\\"; }); \"]},\"94\":{\"h\":\"版本更新记录\",\"t\":[\"1.0.0 3.1发送邮件服务 1.0.1 更新框架为2.1框架兼容更多系统，丰富发送邮件的方法\"]},\"95\":{\"h\":\"Common.JwtToken\"},\"96\":{\"h\":\"操作例子\",\"t\":[\"1. 注入服务 services.AddJwtTokenService(options => { options.JwtAudience = \\\"aaaa\\\"; options.JwtIssuer = \\\"bbbb\\\"; }); 2.注入服务IJwtAuthService \"]},\"97\":{\"h\":\"版本更新记录\",\"t\":[\"1.2.1\",\"升级包版本以及维护文档\",\"1.2.0-beta2\",\"将swagger使用迁移到该包中\",\"1.2.0-beta1\",\"升级支持net7\",\"注入服务的方式更新\",\"1.1.3\",\"支持netcoreapp3.1;net5.0;net6.0\",\"优化方法，增加校验token方法\",\"1.0.0 3.1版本的jwttoken公共库 1.1.0 更新版本为5.0 1.1.1 拓展生成token的方法 1.1.2 配置多个目标框架\"]},\"98\":{\"h\":\"Common.QRCode\"},\"99\":{\"h\":\"操作例子\",\"t\":[\"services.AddQrCode(); 然后注入：IQrCodeHelp \"]},\"100\":{\"h\":\"版本更新记录\",\"t\":[\"1.0.0 2.1版本的生成二维码和条形码\"]},\"101\":{\"h\":\"Common.YuQueSdk\"},\"102\":{\"h\":\"介绍\",\"t\":[\"适用于.NetCore的语雀Sdk，与语雀官方保持一致。\",\"官方文档：https://www.yuque.com/yuque/developer/api\",\"Apifox文档：https://www.apifox.cn/apidoc/project-584301/api-10357086\"]},\"103\":{\"h\":\"功能\",\"t\":[\"用户 \",\" 根据用户名获取单个用户信息\",\" 根据用户标识获取单个用户信息\",\"组织 \",\" 用户某个用户加入的组织列表\",\" 获取公开组织列表\",\" 创建组织\",\" 获取单个组织的详细信息\",\" 更新单个组织详细信息\",\" 删除组织\",\" 获取组织成员信息\",\" 增加或更新组织成员\",\" 删除组织成员\",\"知识库 \",\" 获取某个用户的知识库列表\",\" 创建知识库\",\" 获取知识库详情\",\" 更新知识库信息\",\" 删除知识库\",\"文档 \",\" 获取一个仓库的文档列表\",\" 获取单篇文档的详细信息\",\" 创建文档\",\" 更新文档\",\" 删除文档\"]},\"104\":{\"h\":\"操作\",\"t\":[\"注册\",\"services.AddYuQueService(new YuQueConfig { AuthToken = \\\"xxxxxxxxxxx\\\", UserAgent = \\\"netcoresdk\\\" }); \",\"依赖注入\",\"private readonly IYuQueHelper _yuQueHelper; public TestController(IYuQueHelper yuQueHelper) { _yuQueHelper = yuQueHelper; } // 注入扩展IYuQueExtensionHelper，可以获取目录列表以及仓库文档到指定目录 \"]},\"105\":{\"h\":\"用户\",\"t\":[\"//获取当个用户信息 var user = await _yuQueHelper.GetUsersAsync(\\\"userLoginName\\\"); \"]},\"106\":{\"h\":\"文档\",\"t\":[\"//获取用户下知识库列表 var repList = await yuQueHelper.GetUserRepositoryListAsync(\\\"azrng\\\"); //获取知识库下文档列表 var docList = await yuQueHelper.GetRepositoryDocListAsync(\\\"10874582\\\"); //获取文档详情 var docs = await _yuQueHelper.GetReposDocs(\\\"654321\\\", \\\"df2gl7\\\"); \"]},\"107\":{\"h\":\"版本更新记录\",\"t\":[\"0.0.1-beta2 \",\"更新一些知识库的操作\",\"0.0.1-beta1 \",\"基本的语雀api调用\"]},\"108\":{\"h\":\"Common.AliyunSms(未发布)\",\"t\":[\"该包封装了阿里云短信使用的公共类\"]}},\"dirtCount\":0,\"index\":[[\"该包封装了阿里云短信使用的公共类\",{\"1\":{\"108\":1}}],[\"该包封装了常见的加密公共类\",{\"1\":{\"46\":1}}],[\"未发布\",{\"0\":{\"108\":1}}],[\"可以获取目录列表以及仓库文档到指定目录\",{\"1\":{\"104\":1}}],[\"可用于构建时间片段查询\",{\"1\":{\"25\":1}}],[\"可用于根据业务时间构造插入id\",{\"1\":{\"25\":1}}],[\"依赖注入\",{\"1\":{\"104\":1}}],[\"依赖注入批量注册\",{\"0\":{\"29\":1,\"44\":1}}],[\"文档\",{\"0\":{\"106\":1},\"1\":{\"103\":1}}],[\"文件获取md5\",{\"1\":{\"47\":1}}],[\"创建文档\",{\"1\":{\"103\":1}}],[\"创建知识库\",{\"1\":{\"103\":1}}],[\"创建组织\",{\"1\":{\"103\":1}}],[\"知识库\",{\"1\":{\"103\":1}}],[\"删除文档\",{\"1\":{\"103\":1}}],[\"删除知识库\",{\"1\":{\"103\":1}}],[\"删除组织成员\",{\"1\":{\"103\":1}}],[\"删除组织\",{\"1\":{\"103\":1}}],[\"删除无用代码\",{\"1\":{\"91\":1}}],[\"组织\",{\"1\":{\"103\":1}}],[\"用户某个用户加入的组织列表\",{\"1\":{\"103\":1}}],[\"用户\",{\"0\":{\"105\":1},\"1\":{\"103\":1}}],[\"用来应对pgsql的时间区分有时区无时区方案\",{\"1\":{\"60\":1}}],[\"功能\",{\"0\":{\"103\":1}}],[\"yuquehelper\",{\"1\":{\"104\":4,\"105\":1,\"106\":3}}],[\"yuqueconfig\",{\"1\":{\"104\":1}}],[\"yuque\",{\"1\":{\"102\":2}}],[\"yuquesdk\",{\"0\":{\"101\":1}}],[\"官方文档\",{\"1\":{\"102\":1}}],[\"与语雀官方保持一致\",{\"1\":{\"102\":1}}],[\"适用于\",{\"1\":{\"102\":1}}],[\"qrcode\",{\"0\":{\"98\":1}}],[\"拓展生成token的方法\",{\"1\":{\"97\":1}}],[\"丰富发送邮件的方法\",{\"1\":{\"94\":1}}],[\"授权码\",{\"1\":{\"93\":1}}],[\"发送者密码\",{\"1\":{\"93\":1}}],[\"发送者地址\",{\"1\":{\"93\":1}}],[\"发送者用户名\",{\"1\":{\"93\":1}}],[\"版本封装get\",{\"1\":{\"91\":1}}],[\"版本更新记录\",{\"0\":{\"2\":1,\"31\":1,\"45\":1,\"48\":1,\"51\":1,\"54\":1,\"57\":1,\"60\":1,\"63\":1,\"66\":1,\"69\":1,\"72\":1,\"75\":1,\"78\":1,\"81\":1,\"84\":1,\"88\":1,\"91\":1,\"94\":1,\"97\":1,\"100\":1,\"107\":1}}],[\"然后注入\",{\"1\":{\"90\":1,\"99\":1}}],[\"处理多个构造函数的报错\",{\"1\":{\"88\":1}}],[\"处理自定义模型校验和自定义返回类一起使用导致重复包装的问题\",{\"1\":{\"45\":1}}],[\"处理自定义模型校验返回状态码为200的错误情况\",{\"1\":{\"45\":1}}],[\"请求示例\",{\"1\":{\"87\":1}}],[\"输出sql日志\",{\"1\":{\"84\":1}}],[\"输出结果\",{\"1\":{\"25\":1}}],[\"小数扩展方法\",{\"1\":{\"84\":1}}],[\"扩展方法完善\",{\"1\":{\"84\":1}}],[\"扩展类\",{\"0\":{\"6\":1,\"34\":1}}],[\"添加扩展方法\",{\"1\":{\"81\":1}}],[\"弃用\",{\"0\":{\"76\":1}}],[\"升级包版本以及维护文档\",{\"1\":{\"97\":1}}],[\"升级包版本\",{\"1\":{\"72\":2,\"75\":1}}],[\"升级支持net7\",{\"1\":{\"97\":1}}],[\"升级支持\",{\"1\":{\"31\":1,\"45\":1,\"51\":1,\"60\":1,\"63\":1,\"66\":1,\"69\":1,\"88\":1}}],[\"解决不显示主键类型\",{\"1\":{\"69\":1}}],[\"同步支持common\",{\"1\":{\"69\":1}}],[\"新增设置时区的扩展方法\",{\"1\":{\"69\":1}}],[\"封装简单方法\",{\"1\":{\"66\":1,\"69\":1,\"72\":1,\"75\":1}}],[\"封装了公共的返回类\",{\"1\":{\"28\":1,\"40\":1}}],[\"工作单元封装\",{\"1\":{\"60\":1}}],[\"工作单元类需要单独注入\",{\"1\":{\"60\":1}}],[\"主键id修改类型为long类型\",{\"1\":{\"60\":1}}],[\"分页支持返回总条数\",{\"1\":{\"60\":1}}],[\"去除common包的依赖\",{\"1\":{\"60\":1,\"63\":1,\"66\":1}}],[\"替换nuget包system\",{\"1\":{\"60\":1}}],[\"如services\",{\"1\":{\"60\":1}}],[\"如果参数错误抛出异常\",{\"1\":{\"60\":1}}],[\"如果没有注入配置\",{\"1\":{\"45\":1}}],[\"如果需要自定义模型验证\",{\"1\":{\"42\":1}}],[\"模型配置继承\",{\"1\":{\"59\":1}}],[\"模型校验的错误信息\",{\"1\":{\"28\":1,\"40\":1}}],[\"继承公共基类\",{\"1\":{\"59\":1}}],[\"只是包含efcore公共base类\",{\"1\":{\"59\":1}}],[\"只需要标注特性即可在返回的时候不显示包装的一层\",{\"1\":{\"41\":1}}],[\"基本base实体类封装\",{\"1\":{\"78\":1}}],[\"基本操作内存数据库的封住哪个\",{\"1\":{\"63\":1}}],[\"基本的语雀api调用\",{\"1\":{\"107\":1}}],[\"基本的base类封装\",{\"1\":{\"60\":1}}],[\"基本的公共库\",{\"1\":{\"31\":1}}],[\"基本增删查封装\",{\"1\":{\"57\":1}}],[\"xxxxxxxxxxx\",{\"1\":{\"104\":1}}],[\"xxxx\",{\"1\":{\"56\":1}}],[\"xxx\",{\"1\":{\"53\":1}}],[\"xml等操作\",{\"1\":{\"30\":1}}],[\"方法名字统一处理\",{\"1\":{\"51\":1}}],[\"在需要使用的地方进行注入\",{\"1\":{\"50\":1,\"53\":1}}],[\"在configureservices中注册自定义模型验证过滤器并禁用默认的自动模型验证\",{\"1\":{\"42\":1}}],[\"从common里面移出来一些方法\",{\"1\":{\"45\":1,\"48\":1}}],[\"直接使用services\",{\"1\":{\"45\":1}}],[\"直接返回不再包装\",{\"1\":{\"45\":1}}],[\"必须添加adddefaultcontrollers操作\",{\"1\":{\"45\":1}}],[\"遇到415错误的时候\",{\"1\":{\"45\":1}}],[\"那么就使用默认的commonmvcconfig配置\",{\"1\":{\"45\":1}}],[\"那么就不包装返回\",{\"1\":{\"45\":1}}],[\"优化方法\",{\"1\":{\"91\":1,\"97\":1}}],[\"优化请求和删除方法\",{\"1\":{\"91\":1}}],[\"优化注入服务逻辑\",{\"1\":{\"66\":1}}],[\"优化注入服务的方法\",{\"1\":{\"63\":1}}],[\"优化代码\",{\"1\":{\"51\":1}}],[\"优化支持的框架版本\",{\"1\":{\"45\":2}}],[\"优化adddefaultcontrollers方法\",{\"1\":{\"45\":1}}],[\"优化appsettings写法\",{\"1\":{\"45\":1}}],[\"优化扩展方法命名空间\",{\"1\":{\"31\":1,\"45\":1}}],[\"异常处理中间件增加请求日志输出\",{\"1\":{\"45\":1}}],[\"考虑到该包只能在api层使用\",{\"1\":{\"45\":1}}],[\"让继承某一类的注入\",{\"1\":{\"44\":1}}],[\"身份验证失败\",{\"1\":{\"43\":1}}],[\"对象未找到\",{\"1\":{\"43\":1}}],[\"对象转json字符串\",{\"1\":{\"9\":2}}],[\"系统异常\",{\"1\":{\"43\":1}}],[\"编写一个接口抛出异常\",{\"1\":{\"43\":1}}],[\"编码操作类\",{\"0\":{\"22\":1}}],[\"编码扩展\",{\"0\":{\"14\":1}}],[\"全局异常处理\",{\"0\":{\"43\":1}}],[\"这时候我们的错误信息会显示到error属性里面并且http错误码为400\",{\"1\":{\"42\":1}}],[\"这个效果是不方便前端处理的\",{\"1\":{\"42\":1}}],[\"参数异常\",{\"1\":{\"43\":1}}],[\"参数有误\",{\"1\":{\"43\":2}}],[\"参数格式不正确\",{\"1\":{\"42\":1}}],[\"参数为空\",{\"1\":{\"28\":2,\"40\":2}}],[\"我们再次调用接口\",{\"1\":{\"42\":1}}],[\"则需要先关闭默认的模型验证\",{\"1\":{\"42\":1}}],[\"且优先级比较高\",{\"1\":{\"42\":1}}],[\"默认自带有400模型验证\",{\"1\":{\"42\":1}}],[\"默认返回返回格式\",{\"1\":{\"8\":2,\"10\":2}}],[\"注入扩展iyuqueextensionhelper\",{\"1\":{\"104\":1}}],[\"注入服务的方式更新\",{\"1\":{\"97\":1}}],[\"注入服务ijwtauthservice\",{\"1\":{\"96\":1}}],[\"注入服务\",{\"1\":{\"96\":1}}],[\"注册\",{\"1\":{\"104\":1}}],[\"注册模型校验过滤器\",{\"1\":{\"42\":1}}],[\"注意\",{\"1\":{\"42\":1}}],[\"所以移除增加appsettings\",{\"1\":{\"45\":1}}],[\"所以我们自己做模型校验来封装错误信息\",{\"1\":{\"42\":1}}],[\"所以我们使用的\",{\"1\":{\"42\":1}}],[\"所以当你传的model参数有问题的时候\",{\"1\":{\"42\":1}}],[\"效果如下\",{\"1\":{\"42\":1}}],[\"入参为\",{\"1\":{\"42\":1}}],[\"当传输不符合条件的数据时候返回的状态码是400\",{\"1\":{\"42\":1}}],[\"当我们有一个post的接口\",{\"1\":{\"42\":1}}],[\"当前时间是否是工作日\",{\"1\":{\"8\":1}}],[\"当前时间是否周末\",{\"1\":{\"8\":1}}],[\"举例\",{\"1\":{\"42\":1}}],[\"还未到达action的时候已经处理了校验\",{\"1\":{\"42\":1}}],[\"因为默认是启用模型校验的\",{\"1\":{\"42\":1}}],[\"若是有些action不想包装一层\",{\"1\":{\"41\":1}}],[\"通过自定义结果过滤器来默认给所有接口最外层包装一层返回类\",{\"1\":{\"41\":1}}],[\"查询指定的配置信息\",{\"1\":{\"39\":1}}],[\"查询包可能会受影响\",{\"1\":{\"31\":1}}],[\"常见的asp\",{\"1\":{\"32\":1}}],[\"常见的公共类封住\",{\"1\":{\"4\":1}}],[\"配置\",{\"1\":{\"39\":1}}],[\"配置多个目标框架\",{\"1\":{\"31\":1,\"81\":1,\"88\":1,\"97\":1}}],[\"配置读取\",{\"0\":{\"27\":1,\"39\":1}}],[\"本次发版修改了请求类和返回类\",{\"1\":{\"31\":1}}],[\"84a9ab2db0b01cc9\",{\"1\":{\"42\":1}}],[\"8\",{\"1\":{\"31\":1}}],[\"支持netcoreapp3\",{\"1\":{\"97\":1}}],[\"支持net5\",{\"1\":{\"31\":1}}],[\"支持框架netstandard2\",{\"1\":{\"88\":1}}],[\"支持单独使用该库的model类addentitybase\",{\"1\":{\"60\":1}}],[\"支持主键自定义类型\",{\"1\":{\"60\":1}}],[\"支持3\",{\"1\":{\"45\":2}}],[\"支持抛出异常类型\",{\"1\":{\"43\":1}}],[\"支持使用静态方法使用\",{\"1\":{\"31\":1}}],[\"支持\",{\"1\":{\"31\":1,\"51\":1,\"72\":2,\"75\":1}}],[\"修复迁移的时候自定义配置未生效问题\",{\"1\":{\"66\":1,\"72\":1}}],[\"修复baserequestdto<t>导致useridentity出错问题\",{\"1\":{\"31\":1}}],[\"修改最后序列化方式\",{\"1\":{\"91\":1}}],[\"修改put请求命名问题\",{\"1\":{\"88\":1}}],[\"修改注入方法名称为addentityframework\",{\"1\":{\"63\":1,\"66\":1,\"69\":1,\"72\":1,\"75\":1}}],[\"修改queryableextensions扩展\",{\"1\":{\"60\":2}}],[\"修改orderby排序方法\",{\"1\":{\"60\":1}}],[\"修改版本支持\",{\"1\":{\"60\":1,\"63\":1,\"66\":1,\"69\":1}}],[\"修改查询数值为null报错\",{\"1\":{\"57\":1}}],[\"修改redis操作管理类\",{\"1\":{\"54\":1}}],[\"修改接口名称为icache\",{\"1\":{\"51\":1}}],[\"修改一些文件的命名空间\",{\"1\":{\"31\":1}}],[\"修改加密方法\",{\"1\":{\"31\":1}}],[\"修改md5加密方法\",{\"1\":{\"31\":1}}],[\"修改md5哈希算法\",{\"1\":{\"31\":1}}],[\"修改json目录\",{\"1\":{\"31\":1}}],[\"修改des加密方法\",{\"1\":{\"31\":1}}],[\"修改异常监听类名称\",{\"1\":{\"31\":1}}],[\"修改currentuser为defaultuser\",{\"1\":{\"31\":1}}],[\"修改currentuser默认注入\",{\"1\":{\"31\":1}}],[\"修改todatetimestring支持传入时间格式\",{\"1\":{\"31\":1}}],[\"更新一些知识库的操作\",{\"1\":{\"107\":1}}],[\"更新文档\",{\"1\":{\"103\":1}}],[\"更新知识库信息\",{\"1\":{\"103\":1}}],[\"更新单个组织详细信息\",{\"1\":{\"103\":1}}],[\"更新框架为2\",{\"1\":{\"94\":1}}],[\"更新框架版本为5\",{\"1\":{\"88\":1}}],[\"更新方法名称和增加注释\",{\"1\":{\"91\":1}}],[\"更新post方法\",{\"1\":{\"88\":1}}],[\"更新post方法同时兼容string和其他类型\",{\"1\":{\"88\":1,\"91\":1}}],[\"更新版本为net5\",{\"1\":{\"84\":1}}],[\"更新版本为5\",{\"1\":{\"51\":1,\"54\":1,\"81\":1,\"97\":1}}],[\"更新sqlsugar时间转字符串方法\",{\"1\":{\"84\":1}}],[\"更新session帮助类\",{\"1\":{\"31\":1}}],[\"更新包支持多个版本\",{\"1\":{\"84\":1}}],[\"更新包版本\",{\"1\":{\"63\":1}}],[\"更新组件包版本\",{\"1\":{\"66\":1}}],[\"更新分页入参\",{\"1\":{\"63\":1,\"66\":1,\"69\":1,\"72\":1,\"75\":1}}],[\"更新因为common包升级导致的问题\",{\"1\":{\"60\":1,\"63\":1,\"66\":1}}],[\"更新注册的方法从addentitybase变更为addidhelper\",{\"1\":{\"60\":1}}],[\"更新operatorprovider\",{\"1\":{\"31\":1}}],[\"更新operator支持主键设置类型\",{\"1\":{\"31\":1}}],[\"更新net5包版本\",{\"1\":{\"31\":1}}],[\"更新异常类增加扩展方法\",{\"1\":{\"31\":1}}],[\"更新返回类封装\",{\"1\":{\"31\":1}}],[\"更新公共分页返回类\",{\"1\":{\"31\":1}}],[\"更新getquerypagerequest\",{\"1\":{\"31\":1}}],[\"更新字符串null值校验\",{\"1\":{\"31\":1}}],[\"更新时间扩展类\",{\"1\":{\"31\":2}}],[\"干净common\",{\"1\":{\"31\":1}}],[\"正规化\",{\"1\":{\"31\":1,\"45\":1}}],[\"正则扩展\",{\"1\":{\"31\":1}}],[\"人信息扩展\",{\"1\":{\"31\":1}}],[\"移除zack\",{\"1\":{\"72\":1}}],[\"移除工作单元注入\",{\"1\":{\"69\":1,\"72\":1}}],[\"移除分页的相关的类\",{\"1\":{\"31\":1}}],[\"移除timeextensions合并到datetimeextensions\",{\"1\":{\"31\":1}}],[\"移除session\",{\"1\":{\"20\":1,\"38\":1}}],[\"目录\",{\"1\":{\"30\":1}}],[\"或者使用基础的方法\",{\"1\":{\"44\":1}}],[\"或者\",{\"1\":{\"29\":1,\"44\":1}}],[\"批量注入示例\",{\"1\":{\"29\":1,\"44\":1}}],[\"也可以继承自\",{\"1\":{\"29\":1,\"44\":1}}],[\"比如用户实现类\",{\"1\":{\"29\":1,\"44\":1}}],[\"需要用到的地方直接注入ihttpclienthelper进行\",{\"1\":{\"86\":1}}],[\"需要先关闭默认的模型校验\",{\"1\":{\"42\":1}}],[\"需要注册的实现类继承指定的接口\",{\"1\":{\"29\":1,\"44\":1}}],[\"需要提前注册\",{\"1\":{\"19\":1,\"37\":1}}],[\"7\",{\"1\":{\"28\":1,\"31\":1,\"40\":1}}],[\"返回值修改为imvcbuilder\",{\"1\":{\"45\":1}}],[\"返回结果\",{\"1\":{\"28\":1,\"40\":1,\"43\":1}}],[\"返回错误的效果\",{\"1\":{\"28\":1,\"40\":1}}],[\"返回的示例效果\",{\"1\":{\"28\":1,\"40\":1}}],[\"返回的数据\",{\"1\":{\"28\":1,\"40\":1}}],[\"返回正确的方法\",{\"1\":{\"28\":1,\"40\":1}}],[\"状态码\",{\"1\":{\"28\":1,\"40\":1}}],[\"属性描述\",{\"1\":{\"28\":1,\"40\":1}}],[\"multipartformdatacontent\",{\"1\":{\"87\":2}}],[\"must\",{\"1\":{\"42\":2}}],[\"memorycache\",{\"0\":{\"49\":1}}],[\"message\",{\"1\":{\"28\":4,\"40\":4,\"42\":3,\"43\":1}}],[\"md5哈希算法\",{\"1\":{\"47\":1}}],[\"mapcontrollers\",{\"1\":{\"43\":1}}],[\"minimum\",{\"1\":{\"42\":2}}],[\"minlength\",{\"1\":{\"42\":2}}],[\"more\",{\"1\":{\"42\":1}}],[\"mysql\",{\"0\":{\"64\":1},\"1\":{\"29\":2,\"44\":2,\"77\":1,\"80\":1,\"83\":1}}],[\"myhttpcontext\",{\"1\":{\"19\":2,\"37\":2}}],[\"myhttpcontext帮助类\",{\"0\":{\"19\":1,\"37\":1}}],[\"使用\",{\"0\":{\"47\":1}}],[\"使用异常中间件\",{\"1\":{\"43\":1}}],[\"使用全局异常处理中间件来处理异常\",{\"1\":{\"43\":1}}],[\"使用方法\",{\"1\":{\"27\":1}}],[\"使用sessionhelper需要提前注册myhttpcontext\",{\"1\":{\"20\":1,\"38\":1}}],[\"首先先配置iconfiguration\",{\"1\":{\"27\":1}}],[\"来自老赵的性能检测帮助类\",{\"1\":{\"26\":1}}],[\"性能检测\",{\"0\":{\"26\":1}}],[\"654321\",{\"1\":{\"106\":1}}],[\"6379\",{\"1\":{\"53\":1,\"56\":1}}],[\"6\",{\"1\":{\"31\":2,\"42\":4,\"45\":2,\"60\":1,\"91\":1}}],[\"6901294304266813440\",{\"1\":{\"25\":1}}],[\"6901294304267603970\",{\"1\":{\"25\":1}}],[\"6900931916313923585\",{\"1\":{\"25\":1}}],[\"6lmjb+zyhk6iccgoazgu7dke9fvbkabaiy3pie3ry=\",{\"1\":{\"18\":1}}],[\"$\",{\"1\":{\"25\":1}}],[\"尝试分析\",{\"1\":{\"25\":1}}],[\"of\",{\"1\":{\"42\":2}}],[\"occurred\",{\"1\":{\"42\":1}}],[\"or\",{\"1\":{\"42\":3}}],[\"org\",{\"1\":{\"42\":1}}],[\"one\",{\"1\":{\"42\":1}}],[\"options\",{\"1\":{\"41\":2,\"42\":4,\"96\":3}}],[\"out\",{\"1\":{\"25\":3}}],[\"obj\",{\"1\":{\"9\":2}}],[\"object\",{\"1\":{\"9\":2}}],[\"不带节点和序列号\",{\"1\":{\"25\":1}}],[\"不保留小数点后的0\",{\"1\":{\"10\":1}}],[\"带上节点和序列号\",{\"1\":{\"25\":1}}],[\"带条件的where\",{\"1\":{\"11\":2}}],[\"www\",{\"1\":{\"88\":1,\"102\":2}}],[\"with\",{\"1\":{\"42\":2}}],[\"weatherforecast\",{\"1\":{\"28\":1,\"40\":1,\"43\":1}}],[\"workid\",{\"1\":{\"25\":2}}],[\"worlid\",{\"1\":{\"25\":2}}],[\"writeline\",{\"1\":{\"25\":4}}],[\"where\",{\"1\":{\"12\":1}}],[\"whereif<t>\",{\"1\":{\"11\":2}}],[\"设置序列\",{\"1\":{\"25\":1}}],[\"设置session\",{\"1\":{\"20\":1,\"38\":1}}],[\"雪花id\",{\"0\":{\"25\":1}}],[\"汉字转化为拼音大写首字母\",{\"1\":{\"24\":1}}],[\"汉字转化为大写拼音\",{\"1\":{\"24\":1}}],[\"汉字转拼音\",{\"0\":{\"24\":1}}],[\"表达式树\",{\"0\":{\"21\":1}}],[\"private\",{\"1\":{\"104\":1}}],[\"project\",{\"1\":{\"102\":1}}],[\"prefix\",{\"1\":{\"56\":1}}],[\"predicateextensions\",{\"1\":{\"21\":1}}],[\"predicate\",{\"1\":{\"11\":2}}],[\"put\",{\"1\":{\"91\":1}}],[\"public\",{\"1\":{\"27\":1,\"28\":2,\"29\":1,\"40\":2,\"42\":3,\"43\":1,\"44\":1,\"104\":1}}],[\"png\",{\"1\":{\"87\":4}}],[\"post\",{\"1\":{\"91\":1,\"93\":1}}],[\"postformdataasync<string>\",{\"1\":{\"87\":1}}],[\"postformdataasync<t>\",{\"1\":{\"87\":1}}],[\"postformdata\",{\"0\":{\"87\":1}}],[\"postgressql\",{\"0\":{\"67\":1}}],[\"password=xxxx\",{\"1\":{\"56\":1}}],[\"password=xxx\",{\"1\":{\"53\":1}}],[\"path\",{\"1\":{\"47\":1}}],[\"parameterexception\",{\"1\":{\"43\":2}}],[\"params\",{\"1\":{\"20\":1,\"38\":1,\"39\":1}}],[\"pinyinhelper\",{\"1\":{\"24\":1}}],[\"keys\",{\"1\":{\"20\":1,\"38\":1}}],[\"key\",{\"1\":{\"20\":4,\"38\":4}}],[\"validation\",{\"1\":{\"42\":1}}],[\"value\",{\"1\":{\"20\":2,\"22\":1,\"38\":2}}],[\"var\",{\"1\":{\"8\":5,\"25\":2,\"27\":2,\"28\":1,\"40\":1,\"43\":1,\"87\":4,\"105\":1,\"106\":3}}],[\"void\",{\"1\":{\"20\":3,\"38\":3}}],[\"generateverifycode\",{\"1\":{\"31\":1}}],[\"generaterandomnumber\",{\"1\":{\"18\":1}}],[\"getreposdocs\",{\"1\":{\"106\":1}}],[\"getrepositorydoclistasync\",{\"1\":{\"106\":1}}],[\"getsha512hash\",{\"1\":{\"47\":1}}],[\"getsha256hash\",{\"1\":{\"47\":1}}],[\"getsha1hash\",{\"1\":{\"47\":1}}],[\"getsession<t>\",{\"1\":{\"20\":1,\"38\":1}}],[\"getsession\",{\"1\":{\"20\":1,\"38\":1}}],[\"getfilemd5hash\",{\"1\":{\"47\":1}}],[\"getfirstpinyin\",{\"1\":{\"24\":1}}],[\"getmd5hash\",{\"1\":{\"47\":1}}],[\"getpagerequest增加一个查询关键字\",{\"1\":{\"60\":1}}],[\"getpageinforequest\",{\"1\":{\"31\":1}}],[\"getpinyinquanpin\",{\"1\":{\"24\":1}}],[\"get\",{\"1\":{\"28\":2,\"40\":2,\"42\":2,\"43\":1}}],[\"getvalue<string>\",{\"1\":{\"27\":1}}],[\"getvalue\",{\"1\":{\"27\":1,\"39\":1}}],[\"getid\",{\"1\":{\"25\":1}}],[\"getuserrepositorylistasync\",{\"1\":{\"106\":1}}],[\"getusersasync\",{\"1\":{\"105\":1}}],[\"geturl\",{\"1\":{\"14\":1}}],[\"getunixtimemilliseconds\",{\"1\":{\"8\":1}}],[\"getunixtime\",{\"1\":{\"8\":1}}],[\"getdescriptattr\",{\"1\":{\"12\":1}}],[\"getdescriptionstring\",{\"1\":{\"12\":1}}],[\"getenumvalue<t>\",{\"1\":{\"12\":1}}],[\"getyesterday\",{\"1\":{\"8\":1}}],[\"gettomorrow\",{\"1\":{\"8\":1}}],[\"gettodayendtime\",{\"1\":{\"8\":1}}],[\"gettoday\",{\"1\":{\"8\":1}}],[\"getthismonth\",{\"1\":{\"8\":1}}],[\"getlastmonth\",{\"1\":{\"8\":1}}],[\"getnextmonth\",{\"1\":{\"8\":1}}],[\"getbyindex\",{\"1\":{\"7\":1}}],[\"示例\",{\"1\":{\"18\":1}}],[\"随机数\",{\"1\":{\"18\":1}}],[\"9随机数\",{\"1\":{\"18\":1}}],[\"生成0\",{\"1\":{\"18\":1}}],[\"公共返回包装的方法优化对415错误的处理\",{\"1\":{\"45\":1}}],[\"公共返回类\",{\"0\":{\"28\":1,\"40\":1}}],[\"公共帮助类\",{\"0\":{\"18\":1}}],[\"公共核心库\",{\"0\":{\"0\":1}}],[\"帮助类\",{\"0\":{\"17\":1,\"36\":1}}],[\"集合扩展\",{\"0\":{\"16\":1}}],[\"run\",{\"1\":{\"43\":1}}],[\"runtimelimitasync\",{\"1\":{\"2\":1}}],[\"rfc7231\",{\"1\":{\"42\":1}}],[\"random\",{\"1\":{\"28\":2,\"40\":2,\"43\":2}}],[\"range\",{\"1\":{\"28\":1,\"40\":1,\"43\":1}}],[\"replist\",{\"1\":{\"106\":1}}],[\"readonly\",{\"1\":{\"104\":1}}],[\"readallbytesasync\",{\"1\":{\"87\":1}}],[\"restsharpclient\",{\"0\":{\"89\":1}}],[\"response\",{\"1\":{\"87\":1}}],[\"resultmodel<ienumerable<weatherforecast>>\",{\"1\":{\"28\":2,\"40\":2}}],[\"resultmodel<t>\",{\"1\":{\"28\":1,\"40\":1}}],[\"resultmodel\",{\"1\":{\"28\":1,\"40\":1}}],[\"result\",{\"1\":{\"15\":2,\"28\":2,\"40\":2}}],[\"redisconfig\",{\"1\":{\"56\":1}}],[\"redis\",{\"0\":{\"52\":1}}],[\"registeruniteservices\",{\"1\":{\"44\":1}}],[\"registerbusinessservices\",{\"1\":{\"29\":2,\"44\":2}}],[\"required\",{\"1\":{\"42\":3}}],[\"reqestip\",{\"1\":{\"35\":1}}],[\"return\",{\"1\":{\"28\":2,\"40\":2,\"43\":1,\"80\":1,\"83\":1}}],[\"remove\",{\"1\":{\"20\":1,\"38\":1}}],[\"rndnum\",{\"1\":{\"18\":1}}],[\"采用utf8编码方式解密\",{\"1\":{\"15\":1}}],[\"采用utf8编码方式加密\",{\"1\":{\"15\":1}}],[\"host\",{\"1\":{\"93\":1}}],[\"hot\",{\"1\":{\"28\":1,\"40\":1}}],[\"headers\",{\"1\":{\"87\":1}}],[\"httpclients\",{\"0\":{\"85\":1}}],[\"httpcontext\",{\"1\":{\"35\":2}}],[\"httpcontext扩展\",{\"0\":{\"35\":1}}],[\"httpcontextextensions\",{\"1\":{\"31\":1,\"45\":1}}],[\"httpcontextmanager\",{\"1\":{\"31\":1,\"45\":1}}],[\"https\",{\"1\":{\"42\":1,\"102\":2}}],[\"httpget\",{\"1\":{\"28\":2,\"40\":2,\"43\":1}}],[\"htmltotext\",{\"1\":{\"23\":1}}],[\"html\",{\"0\":{\"23\":1},\"1\":{\"42\":1}}],[\"htmldecode\",{\"1\":{\"14\":1}}],[\"htmlencode\",{\"1\":{\"14\":2}}],[\"hascolumns\",{\"1\":{\"13\":3}}],[\"haschinese\",{\"1\":{\"7\":1}}],[\"useanycors\",{\"1\":{\"45\":1}}],[\"useauthorization\",{\"1\":{\"43\":1}}],[\"usecustomexceptionmiddleware\",{\"1\":{\"43\":1}}],[\"useswaggerui\",{\"1\":{\"43\":1}}],[\"useswagger\",{\"1\":{\"43\":1}}],[\"userloginname\",{\"1\":{\"105\":1}}],[\"user\",{\"1\":{\"105\":1}}],[\"useragent\",{\"1\":{\"104\":1}}],[\"userauthexception\",{\"1\":{\"43\":1}}],[\"userinfo\",{\"1\":{\"42\":1}}],[\"userservice\",{\"1\":{\"29\":1,\"44\":1}}],[\"unicode\",{\"1\":{\"22\":1}}],[\"unicodetostring\",{\"1\":{\"22\":1}}],[\"unicode转字符串\",{\"1\":{\"22\":1}}],[\"unixmillisecond2\",{\"1\":{\"8\":1}}],[\"unixmillisecond\",{\"1\":{\"8\":2}}],[\"unixsecond2\",{\"1\":{\"8\":1}}],[\"unixsecond\",{\"1\":{\"8\":1}}],[\"url\",{\"1\":{\"87\":1}}],[\"urldecode\",{\"1\":{\"14\":3}}],[\"urlencoded请求方式代码\",{\"1\":{\"88\":1}}],[\"urlencode\",{\"1\":{\"14\":3}}],[\"枚举转字典\",{\"1\":{\"12\":1}}],[\"枚举扩展\",{\"0\":{\"12\":1}}],[\"根据用户标识获取单个用户信息\",{\"1\":{\"103\":1}}],[\"根据用户名获取单个用户信息\",{\"1\":{\"103\":1}}],[\"根据自己需求不同继承合适声明周期的接口\",{\"1\":{\"29\":1,\"44\":1}}],[\"根据时间自动生成编号\",{\"1\":{\"18\":1}}],[\"根据description获取枚举值\",{\"1\":{\"12\":1}}],[\"根据条件拼接字符串\",{\"1\":{\"7\":1}}],[\"检查集合是否存在元素\",{\"1\":{\"16\":1}}],[\"检查集合是null或者空\",{\"1\":{\"11\":1}}],[\"检查集合不是null或者空\",{\"1\":{\"11\":1}}],[\"自定义错误\",{\"1\":{\"43\":1}}],[\"自定义模型验证\",{\"0\":{\"42\":1}}],[\"自定义结果过滤器\",{\"0\":{\"41\":1}}],[\"自定义格式\",{\"1\":{\"10\":3}}],[\"自定义时间格式\",{\"1\":{\"8\":2}}],[\"df2gl7\",{\"1\":{\"106\":1}}],[\"docs\",{\"1\":{\"106\":1}}],[\"doclist\",{\"1\":{\"106\":1}}],[\"d\",{\"1\":{\"87\":1}}],[\"dbtype\",{\"1\":{\"80\":2,\"83\":2}}],[\"dbconfig\",{\"1\":{\"77\":1}}],[\"dynamic\",{\"1\":{\"60\":1}}],[\"dll\",{\"1\":{\"29\":2,\"44\":2}}],[\"dictionary<int\",{\"1\":{\"12\":1}}],[\"developer\",{\"1\":{\"102\":1}}],[\"delete\",{\"1\":{\"91\":1}}],[\"defaultdatabase=0\",{\"1\":{\"56\":1}}],[\"defaultdatabase=1\",{\"1\":{\"53\":1}}],[\"descriptionattribute\",{\"1\":{\"12\":1}}],[\"description\",{\"1\":{\"12\":1}}],[\"dec\",{\"1\":{\"10\":3}}],[\"decimal\",{\"1\":{\"10\":3}}],[\"decimal扩展\",{\"0\":{\"10\":1}}],[\"date\",{\"1\":{\"28\":4,\"40\":4,\"43\":1}}],[\"datetimeformats\",{\"1\":{\"9\":1}}],[\"datetime2=\",{\"1\":{\"8\":1}}],[\"datetime1\",{\"1\":{\"8\":1}}],[\"datetimeoffset\",{\"1\":{\"8\":2}}],[\"datetime\",{\"1\":{\"8\":31,\"25\":3,\"28\":1,\"40\":1,\"43\":1}}],[\"data\",{\"1\":{\"28\":4,\"40\":4,\"87\":1}}],[\"datatable扩展\",{\"0\":{\"13\":1}}],[\"datatable\",{\"1\":{\"9\":1,\"13\":6}}],[\"jwtissuer\",{\"1\":{\"96\":1}}],[\"jwtaudience\",{\"1\":{\"96\":1}}],[\"jwttoken\",{\"0\":{\"95\":1}}],[\"jobject\",{\"1\":{\"9\":1}}],[\"json转入core包\",{\"1\":{\"31\":1}}],[\"json字符串转jobject\",{\"1\":{\"9\":1}}],[\"json字符串转datatable\",{\"1\":{\"9\":1}}],[\"json字符串转list\",{\"1\":{\"9\":1}}],[\"json字符串转对象\",{\"1\":{\"9\":1}}],[\"json\",{\"1\":{\"9\":4}}],[\"json扩展\",{\"0\":{\"9\":1}}],[\"json包\",{\"1\":{\"2\":1}}],[\"linq\",{\"1\":{\"60\":1}}],[\"list\",{\"1\":{\"13\":4}}],[\"list<t>\",{\"1\":{\"9\":1,\"13\":1}}],[\"length\",{\"1\":{\"28\":1,\"40\":1,\"42\":2,\"43\":1}}],[\"len\",{\"1\":{\"18\":1}}],[\"long\",{\"1\":{\"8\":1}}],[\"584301\",{\"1\":{\"102\":1}}],[\"587\",{\"1\":{\"93\":1}}],[\"500\",{\"1\":{\"43\":2}}],[\"5\",{\"1\":{\"31\":2,\"42\":2,\"43\":1,\"45\":2,\"60\":1,\"88\":1,\"91\":1}}],[\"52\",{\"1\":{\"28\":1,\"40\":1}}],[\"55\",{\"1\":{\"28\":1,\"40\":1,\"43\":1}}],[\"51\",{\"1\":{\"8\":2}}],[\"57\",{\"1\":{\"8\":2}}],[\"59\",{\"1\":{\"8\":2}}],[\"name\",{\"1\":{\"27\":4,\"42\":5,\"87\":1}}],[\"netstandard2\",{\"1\":{\"60\":1,\"63\":1,\"66\":1,\"69\":1,\"72\":1}}],[\"net5和\",{\"1\":{\"75\":1}}],[\"net5以及\",{\"1\":{\"72\":1}}],[\"net5\",{\"1\":{\"60\":1,\"63\":1,\"66\":1,\"69\":1,\"97\":1}}],[\"netcoresdk\",{\"1\":{\"104\":1}}],[\"netcore的语雀sdk\",{\"1\":{\"102\":1}}],[\"netcore里面辅助方法\",{\"1\":{\"32\":1}}],[\"netcore默认di容器的批量注入方法\",{\"1\":{\"31\":1}}],[\"netcoreapi\",{\"1\":{\"29\":2,\"44\":2}}],[\"net7\",{\"1\":{\"31\":1,\"45\":1,\"51\":1,\"60\":1,\"63\":1,\"66\":1,\"69\":1,\"72\":1,\"88\":1}}],[\"net6包\",{\"1\":{\"72\":1}}],[\"net6版本\",{\"1\":{\"31\":1}}],[\"net6\",{\"1\":{\"27\":1,\"51\":1,\"60\":1,\"63\":1,\"66\":1,\"69\":1,\"72\":2,\"75\":1,\"88\":1,\"97\":1}}],[\"net6之前\",{\"1\":{\"27\":1}}],[\"next\",{\"1\":{\"28\":2,\"40\":2,\"43\":2}}],[\"newid\",{\"1\":{\"25\":2}}],[\"new\",{\"1\":{\"25\":1,\"28\":1,\"40\":1,\"43\":2,\"56\":1,\"80\":1,\"83\":1,\"87\":5,\"104\":1}}],[\"number\",{\"1\":{\"10\":2}}],[\"null\",{\"1\":{\"7\":4,\"28\":1,\"40\":1}}],[\"nowrapperattribute\",{\"1\":{\"41\":1}}],[\"now\",{\"1\":{\"8\":2,\"25\":2,\"28\":1,\"40\":1,\"43\":1}}],[\"时间转为id\",{\"1\":{\"25\":1}}],[\"时间转时间戳unix\",{\"1\":{\"8\":3}}],[\"时间戳精确到毫秒\",{\"1\":{\"8\":1}}],[\"时间戳精确到秒\",{\"1\":{\"8\":3}}],[\"时间戳转本地时间\",{\"1\":{\"8\":1}}],[\"时间扩展\",{\"0\":{\"8\":1}}],[\"form\",{\"1\":{\"87\":6,\"88\":1}}],[\"formdatacontent\",{\"1\":{\"87\":1}}],[\"format\",{\"1\":{\"8\":1}}],[\"filename\",{\"1\":{\"87\":2}}],[\"file\",{\"1\":{\"87\":4}}],[\"filters\",{\"1\":{\"41\":1,\"42\":1}}],[\"fix处理md5加密将16位和32位弄混问题\",{\"1\":{\"48\":1}}],[\"field\",{\"1\":{\"42\":6}}],[\"fieldinfo\",{\"1\":{\"12\":2}}],[\"frompassword\",{\"1\":{\"93\":1}}],[\"fromaddress\",{\"1\":{\"93\":1}}],[\"fromname\",{\"1\":{\"93\":1}}],[\"frombase64decode\",{\"1\":{\"2\":1}}],[\"freezing\",{\"1\":{\"28\":1,\"40\":1}}],[\"flag\",{\"1\":{\"25\":1}}],[\"func<t\",{\"1\":{\"11\":1}}],[\"false\",{\"1\":{\"8\":1,\"28\":1,\"40\":1,\"42\":1,\"43\":1}}],[\"获取文档详情\",{\"1\":{\"106\":1}}],[\"获取知识库下文档列表\",{\"1\":{\"106\":1}}],[\"获取知识库详情\",{\"1\":{\"103\":1}}],[\"获取用户下知识库列表\",{\"1\":{\"106\":1}}],[\"获取当个用户信息\",{\"1\":{\"105\":1}}],[\"获取单篇文档的详细信息\",{\"1\":{\"103\":1}}],[\"获取单个组织的详细信息\",{\"1\":{\"103\":1}}],[\"获取一个仓库的文档列表\",{\"1\":{\"103\":1}}],[\"获取某个用户的知识库列表\",{\"1\":{\"103\":1}}],[\"获取组织成员信息\",{\"1\":{\"103\":1}}],[\"获取公开组织列表\",{\"1\":{\"103\":1}}],[\"获取请求的ip地址\",{\"1\":{\"35\":1}}],[\"获取指定时间的id\",{\"1\":{\"25\":1}}],[\"获取下一个id\",{\"1\":{\"25\":1}}],[\"获取下个月第一天\",{\"1\":{\"8\":1}}],[\"获取session\",{\"1\":{\"20\":1,\"38\":1}}],[\"获取httpcontext\",{\"1\":{\"19\":1,\"37\":1}}],[\"获取字符串sha512值\",{\"1\":{\"47\":1}}],[\"获取字符串sha256值\",{\"1\":{\"47\":1}}],[\"获取字符串sha1值\",{\"1\":{\"47\":1}}],[\"获取字符串里面的url地址\",{\"1\":{\"14\":1}}],[\"获取字段description\",{\"1\":{\"12\":1}}],[\"获取枚举描述\",{\"1\":{\"12\":1}}],[\"获取毫秒时间戳\",{\"1\":{\"8\":1}}],[\"获取毫秒\",{\"1\":{\"8\":1}}],[\"获取秒\",{\"1\":{\"8\":1}}],[\"获取时间戳\",{\"1\":{\"8\":1}}],[\"获取明天零时\",{\"1\":{\"8\":1}}],[\"获取昨天零时\",{\"1\":{\"8\":1}}],[\"获取今天晚上23\",{\"1\":{\"8\":1}}],[\"获取今天凌晨0时\",{\"1\":{\"8\":1}}],[\"获取最后一个月一号\",{\"1\":{\"8\":1}}],[\"获取这个月第一天\",{\"1\":{\"8\":1}}],[\"获取特定位置的字符串\",{\"1\":{\"7\":1}}],[\"aliyunsms\",{\"0\":{\"108\":1}}],[\"azrng\",{\"1\":{\"106\":1}}],[\"authtoken\",{\"1\":{\"104\":1}}],[\"aaaa\",{\"1\":{\"96\":1}}],[\"await\",{\"1\":{\"87\":2,\"105\":1,\"106\":3}}],[\"assemblies\",{\"1\":{\"44\":1}}],[\"apidoc\",{\"1\":{\"102\":1}}],[\"apifox\",{\"1\":{\"102\":1}}],[\"apifox文档\",{\"1\":{\"102\":1}}],[\"api\",{\"1\":{\"87\":1,\"102\":2}}],[\"apicontroller\",{\"1\":{\"42\":1}}],[\"app\",{\"1\":{\"43\":8,\"45\":1}}],[\"appsettings\",{\"1\":{\"27\":4,\"39\":1}}],[\"appendif\",{\"1\":{\"7\":1}}],[\"array\",{\"1\":{\"42\":2}}],[\"a\",{\"1\":{\"42\":4}}],[\"addyuqueservice\",{\"1\":{\"104\":1}}],[\"addqrcode\",{\"1\":{\"99\":1}}],[\"addjwttokenservice\",{\"1\":{\"96\":1}}],[\"addemail\",{\"1\":{\"93\":1}}],[\"addhttpclientservice\",{\"1\":{\"86\":1,\"90\":1}}],[\"addsqlsugarservice\",{\"1\":{\"80\":1,\"83\":1}}],[\"addmysqlservice<opendbcontext>\",{\"1\":{\"77\":1}}],[\"addmemorycacheextension\",{\"1\":{\"50\":1}}],[\"addunitofwork<basedbcontext>\",{\"1\":{\"60\":1}}],[\"addautogenerationid\",{\"1\":{\"59\":1}}],[\"addanycors\",{\"1\":{\"45\":1}}],[\"addrediscacheservice\",{\"1\":{\"53\":1,\"56\":1}}],[\"add<modelverifyfilter>\",{\"1\":{\"42\":1}}],[\"add\",{\"1\":{\"41\":1,\"87\":3}}],[\"addcontrollers\",{\"1\":{\"41\":1,\"42\":1}}],[\"adddays\",{\"1\":{\"25\":2,\"28\":1,\"40\":1,\"43\":1}}],[\"attributeencode\",{\"1\":{\"14\":2}}],[\"aimstr\",{\"1\":{\"7\":1}}],[\"email\",{\"0\":{\"92\":1}}],[\"efcoreconfigurations\",{\"0\":{\"76\":1}}],[\"efcore设置时间方案\",{\"1\":{\"69\":1}}],[\"efcore\",{\"0\":{\"58\":1,\"61\":1,\"64\":1,\"67\":1,\"70\":1,\"73\":1},\"1\":{\"29\":2,\"44\":2,\"72\":1}}],[\"error\",{\"1\":{\"28\":1,\"40\":1}}],[\"errors\",{\"1\":{\"28\":4,\"40\":4,\"42\":3,\"43\":1}}],[\"e\",{\"1\":{\"18\":1}}],[\"entitytypeconfigurationidentityoperatorstatus<t\",{\"1\":{\"59\":1}}],[\"entitytypeconfigurationidentityoperatorstatus\",{\"1\":{\"59\":1}}],[\"entitytypeconfigurationidentityoperator<t\",{\"1\":{\"59\":1}}],[\"entitytypeconfigurationidentityoperator\",{\"1\":{\"59\":1}}],[\"entitytypeconfigurationidentity<t\",{\"1\":{\"59\":1}}],[\"entitytypeconfigurationidentity\",{\"1\":{\"59\":1}}],[\"entitynotfoundexception\",{\"1\":{\"43\":1}}],[\"environment\",{\"1\":{\"43\":1}}],[\"env\",{\"1\":{\"27\":3}}],[\"encodetype\",{\"1\":{\"15\":2}}],[\"encoding\",{\"1\":{\"14\":4,\"15\":2}}],[\"enumerable\",{\"1\":{\"28\":1,\"40\":1,\"43\":1}}],[\"enumerable扩展\",{\"0\":{\"11\":1}}],[\"enumtodictionary<t>\",{\"1\":{\"12\":1}}],[\"enumitem\",{\"1\":{\"12\":1}}],[\"enum\",{\"1\":{\"12\":2}}],[\"expression<func<t\",{\"1\":{\"11\":1}}],[\"extension\",{\"1\":{\"2\":1}}],[\"equalsnocase\",{\"1\":{\"7\":1}}],[\"忽略大小写的字符串比较\",{\"1\":{\"7\":1}}],[\"iyuquehelper\",{\"1\":{\"104\":2}}],[\"iqrcodehelp\",{\"1\":{\"99\":1}}],[\"iqueryable<t>\",{\"1\":{\"11\":2}}],[\"ihttpclienthelper\",{\"1\":{\"90\":1}}],[\"image\",{\"1\":{\"87\":1}}],[\"img\",{\"1\":{\"87\":2}}],[\"imemorycachimg\",{\"1\":{\"50\":1}}],[\"ibaserepository接口编写\",{\"1\":{\"60\":1}}],[\"irediscachemanager\",{\"1\":{\"53\":1}}],[\"iresultmodel<ienumerable<weatherforecast>>\",{\"1\":{\"28\":2,\"40\":2}}],[\"iresultmodel<t>\",{\"1\":{\"28\":1,\"40\":1}}],[\"iresultmodel\",{\"1\":{\"28\":1,\"40\":1}}],[\"if\",{\"1\":{\"43\":1}}],[\"ienumerable<weatherforecast>\",{\"1\":{\"43\":1}}],[\"ienumerable<t>\",{\"1\":{\"11\":4}}],[\"ietf\",{\"1\":{\"42\":1}}],[\"icurrentuser\",{\"1\":{\"31\":1,\"45\":1}}],[\"iconfiguration\",{\"1\":{\"27\":1}}],[\"icollection<t>\",{\"1\":{\"16\":1}}],[\"io帮助类\",{\"0\":{\"30\":1}}],[\"itransientdependency\",{\"1\":{\"29\":1,\"44\":1}}],[\"iuserservice\",{\"1\":{\"29\":1,\"44\":1}}],[\"iwebhostenvironment\",{\"1\":{\"27\":1}}],[\"identityoperatorstatusentity<tkey>\",{\"1\":{\"59\":1}}],[\"identityoperatorstatusentity\",{\"1\":{\"59\":1}}],[\"identityoperatorentity<tkey>\",{\"1\":{\"59\":1}}],[\"identityoperatorentity\",{\"1\":{\"59\":1}}],[\"identitybaseentity<tkey>\",{\"1\":{\"59\":1}}],[\"identitybaseentity\",{\"1\":{\"59\":1}}],[\"id\",{\"1\":{\"25\":3,\"42\":5}}],[\"ilist\",{\"1\":{\"13\":3}}],[\"info\",{\"1\":{\"93\":6}}],[\"inmemory\",{\"0\":{\"61\":1}}],[\"instancename\",{\"1\":{\"56\":1}}],[\"initconfiguration\",{\"1\":{\"27\":2}}],[\"index\",{\"1\":{\"7\":1,\"28\":2,\"40\":2,\"43\":2}}],[\"int\",{\"1\":{\"7\":1,\"10\":2,\"18\":2,\"25\":2}}],[\"is\",{\"1\":{\"42\":2}}],[\"isingletondependency\",{\"1\":{\"29\":1,\"44\":2}}],[\"isintformat\",{\"1\":{\"7\":1}}],[\"iscopeddependency\",{\"1\":{\"29\":1,\"44\":1}}],[\"issuccess\",{\"1\":{\"28\":5,\"40\":5,\"42\":1,\"43\":1}}],[\"isseconds\",{\"1\":{\"8\":1}}],[\"isweekday\",{\"1\":{\"8\":1}}],[\"isweekend\",{\"1\":{\"8\":1}}],[\"isnotnullorempty<t>\",{\"1\":{\"11\":1}}],[\"isnotnullorempty\",{\"1\":{\"7\":1}}],[\"isnotnullorwhitespace\",{\"1\":{\"7\":1}}],[\"isnullorempty<t>\",{\"1\":{\"11\":1,\"16\":1}}],[\"isnullorempty\",{\"1\":{\"7\":1}}],[\"isnullorwhitespace\",{\"1\":{\"7\":1}}],[\"isdevelopment\",{\"1\":{\"43\":1}}],[\"isdecimalformat\",{\"1\":{\"7\":1}}],[\"isdateformat\",{\"1\":{\"7\":1}}],[\"bbbb\",{\"1\":{\"96\":1}}],[\"bytearraycontent\",{\"1\":{\"87\":1}}],[\"bytecontent\",{\"1\":{\"87\":3}}],[\"bytes\",{\"1\":{\"87\":2}}],[\"build\",{\"1\":{\"43\":1}}],[\"builder\",{\"1\":{\"7\":1,\"27\":1,\"43\":1}}],[\"beat1\",{\"1\":{\"51\":1}}],[\"beat2\",{\"1\":{\"45\":1}}],[\"be\",{\"1\":{\"42\":2}}],[\"beta7\",{\"1\":{\"31\":1,\"60\":1}}],[\"beta8\",{\"1\":{\"31\":1,\"60\":1}}],[\"beta9\",{\"1\":{\"31\":1}}],[\"beta10\",{\"1\":{\"31\":1}}],[\"beta1\",{\"1\":{\"31\":2,\"45\":2,\"48\":1,\"60\":2,\"63\":2,\"66\":1,\"69\":2,\"72\":1,\"75\":1,\"84\":1,\"97\":1,\"107\":1}}],[\"beta2\",{\"1\":{\"31\":2,\"45\":1,\"48\":1,\"60\":2,\"63\":1,\"66\":1,\"69\":2,\"72\":1,\"75\":1,\"97\":1,\"107\":1}}],[\"beta3\",{\"1\":{\"31\":2,\"45\":1,\"60\":1,\"63\":1,\"66\":1,\"69\":1,\"72\":1,\"75\":1}}],[\"beta4\",{\"1\":{\"31\":2,\"45\":1,\"60\":1,\"63\":1,\"66\":1,\"69\":1}}],[\"beta5\",{\"1\":{\"31\":2,\"45\":1,\"60\":1,\"63\":1,\"66\":1}}],[\"beta6\",{\"1\":{\"31\":2,\"45\":1}}],[\"batch\",{\"1\":{\"72\":1}}],[\"basequeryconfig\",{\"1\":{\"80\":1,\"83\":1}}],[\"basecustomerexception\",{\"1\":{\"43\":1}}],[\"baseservice到azrngcommon包\",{\"1\":{\"45\":1}}],[\"baseservice\",{\"1\":{\"31\":1}}],[\"base64解码\",{\"1\":{\"15\":1}}],[\"base64解密\",{\"1\":{\"15\":1}}],[\"base64decode\",{\"1\":{\"15\":2}}],[\"base64encode\",{\"1\":{\"15\":2}}],[\"base64编码\",{\"1\":{\"15\":2}}],[\"base64扩展\",{\"0\":{\"15\":1}}],[\"balmy\",{\"1\":{\"28\":1,\"40\":1}}],[\"bool>\",{\"1\":{\"11\":1}}],[\"bool>>\",{\"1\":{\"11\":1}}],[\"bool\",{\"1\":{\"7\":10,\"8\":3,\"11\":4,\"13\":3,\"16\":1}}],[\"=>\",{\"1\":{\"28\":1,\"40\":1,\"41\":1,\"42\":2,\"43\":1,\"56\":1,\"83\":1,\"93\":1,\"96\":1}}],[\"=\",{\"1\":{\"7\":1,\"8\":4,\"10\":1,\"13\":3,\"25\":4,\"27\":4,\"28\":4,\"40\":4,\"42\":1,\"43\":4,\"56\":2,\"80\":2,\"83\":2,\"87\":7,\"93\":5,\"96\":2,\"104\":3,\"105\":1,\"106\":3}}],[\"smtp\",{\"1\":{\"93\":1}}],[\"sqlsugar和efcore结合使用\",{\"1\":{\"84\":1}}],[\"sqlsugarquery\",{\"0\":{\"82\":1}}],[\"sqlsugar\",{\"0\":{\"79\":1},\"1\":{\"80\":1,\"83\":1}}],[\"sqlserver\",{\"0\":{\"73\":1}}],[\"sqlite\",{\"0\":{\"70\":1},\"1\":{\"72\":1}}],[\"sha哈希算法\",{\"1\":{\"47\":1}}],[\"shared\",{\"1\":{\"28\":2,\"40\":2,\"43\":2}}],[\"singleton\",{\"1\":{\"44\":1}}],[\"sortcontent增加构造函数\",{\"1\":{\"31\":1}}],[\"source\",{\"1\":{\"11\":4,\"15\":2,\"16\":1}}],[\"suppressmodelstateinvalidfilter\",{\"1\":{\"42\":1}}],[\"success\",{\"1\":{\"28\":2,\"40\":2}}],[\"summaries\",{\"1\":{\"28\":2,\"40\":2,\"43\":2}}],[\"summary\",{\"1\":{\"28\":4,\"40\":4,\"43\":1}}],[\"statrup的configureservices方法添加\",{\"1\":{\"59\":1}}],[\"statrup的configureservices方法添加services\",{\"1\":{\"50\":1,\"53\":1}}],[\"status\",{\"1\":{\"42\":1}}],[\"startup\",{\"1\":{\"27\":1}}],[\"strhtml\",{\"1\":{\"23\":1}}],[\"str\",{\"1\":{\"7\":7,\"14\":1,\"24\":2,\"47\":4}}],[\"stringcontent\",{\"1\":{\"87\":2}}],[\"stringtounicode\",{\"1\":{\"22\":1}}],[\"string>\",{\"1\":{\"12\":1}}],[\"stringbuilder\",{\"1\":{\"7\":2}}],[\"string\",{\"1\":{\"7\":16,\"8\":3,\"9\":7,\"10\":3,\"12\":2,\"14\":16,\"15\":8,\"18\":3,\"20\":7,\"22\":4,\"23\":2,\"24\":4,\"35\":1,\"38\":7,\"39\":2,\"42\":4,\"47\":10,\"87\":1}}],[\"snowflake\",{\"1\":{\"25\":8}}],[\"servererrorexception\",{\"1\":{\"43\":1}}],[\"servicelifetime\",{\"1\":{\"44\":1}}],[\"services\",{\"1\":{\"29\":2,\"41\":1,\"42\":1,\"44\":3,\"56\":1,\"59\":1,\"77\":1,\"80\":1,\"83\":1,\"86\":1,\"90\":1,\"93\":1,\"96\":1,\"99\":1,\"104\":1}}],[\"service\",{\"1\":{\"27\":2}}],[\"serviceproviderhelper\",{\"1\":{\"31\":1,\"45\":1}}],[\"serviceprovider\",{\"1\":{\"20\":1,\"38\":1}}],[\"serviceprovider=xxxserviceprovider\",{\"1\":{\"19\":1,\"37\":1}}],[\"section\",{\"1\":{\"42\":1}}],[\"sections\",{\"1\":{\"39\":1}}],[\"set\",{\"1\":{\"42\":2}}],[\"setsession<t>\",{\"1\":{\"20\":1,\"38\":1}}],[\"setsession\",{\"1\":{\"20\":1,\"38\":1}}],[\"sessionhelper\",{\"1\":{\"31\":1,\"45\":1}}],[\"session帮助类\",{\"0\":{\"20\":1,\"38\":1}}],[\"select\",{\"1\":{\"28\":1,\"40\":1,\"43\":1}}],[\"sequence\",{\"1\":{\"25\":5}}],[\"separator\",{\"1\":{\"7\":1}}],[\"字符串md5哈希算法\",{\"1\":{\"47\":1}}],[\"字符串转unicode码\",{\"1\":{\"22\":1}}],[\"字符串分割成字符串数组\",{\"1\":{\"7\":1}}],[\"字符串扩展\",{\"0\":{\"7\":1}}],[\"空\",{\"1\":{\"7\":2}}],[\"空和空白字符\",{\"1\":{\"7\":2}}],[\"是否成功\",{\"1\":{\"28\":1,\"40\":1}}],[\"是\",{\"1\":{\"7\":1}}],[\"cn\",{\"1\":{\"102\":1}}],[\"client\",{\"1\":{\"87\":1}}],[\"class\",{\"1\":{\"29\":1,\"42\":1,\"44\":1}}],[\"csredis\",{\"0\":{\"55\":1}}],[\"cache\",{\"0\":{\"49\":1,\"52\":1,\"55\":1}}],[\"customresultpackfilter\",{\"1\":{\"41\":1}}],[\"current\",{\"1\":{\"19\":1,\"37\":1}}],[\"currentstring\",{\"1\":{\"7\":4}}],[\"cron帮助类\",{\"1\":{\"31\":1,\"45\":1}}],[\"createno\",{\"1\":{\"18\":1}}],[\"code\",{\"1\":{\"28\":5,\"40\":5,\"42\":1,\"43\":1}}],[\"codetimerhelper\",{\"1\":{\"26\":1}}],[\"codenum\",{\"1\":{\"18\":1}}],[\"contenttype\",{\"1\":{\"87\":1}}],[\"contentdispositionheadervalue\",{\"1\":{\"87\":1}}],[\"contentdisposition\",{\"1\":{\"87\":1}}],[\"connection\",{\"1\":{\"80\":1,\"83\":1}}],[\"connectionstring\",{\"1\":{\"56\":1,\"77\":1,\"80\":1,\"83\":1}}],[\"configureservices里面添加\",{\"1\":{\"86\":1}}],[\"configureapibehavioroptions\",{\"1\":{\"42\":1}}],[\"configuration=configuration\",{\"1\":{\"39\":1}}],[\"configuration\",{\"1\":{\"27\":5,\"77\":1}}],[\"console\",{\"1\":{\"25\":4}}],[\"condition\",{\"1\":{\"7\":1,\"11\":2}}],[\"com\",{\"1\":{\"93\":1,\"102\":1}}],[\"comparastr\",{\"1\":{\"7\":1}}],[\"commonhelper\",{\"1\":{\"31\":1}}],[\"common\",{\"0\":{\"1\":1,\"3\":1,\"49\":1,\"52\":1,\"55\":1,\"58\":1,\"61\":1,\"64\":1,\"67\":1,\"70\":1,\"73\":1,\"76\":1,\"79\":1,\"82\":1,\"85\":1,\"89\":1,\"92\":1,\"95\":1,\"98\":1,\"101\":1,\"108\":1}}],[\"core中\",{\"1\":{\"31\":1}}],[\"core\",{\"0\":{\"1\":1},\"1\":{\"60\":1}}],[\"判断字符串是\",{\"1\":{\"7\":1}}],[\"判断字符串是否包含中文\",{\"1\":{\"7\":1}}],[\"判断字符串是否是日期类型\",{\"1\":{\"7\":1}}],[\"判断字符串是否是decimal类型\",{\"1\":{\"7\":1}}],[\"判断字符串是否是数值类型\",{\"1\":{\"7\":1}}],[\"判断字符串\",{\"1\":{\"7\":1}}],[\"判断字符串不是\",{\"1\":{\"7\":2}}],[\"testcontroller\",{\"1\":{\"104\":1}}],[\"temperaturef\",{\"1\":{\"28\":3,\"40\":3}}],[\"temperaturec\",{\"1\":{\"28\":4,\"40\":4,\"43\":1}}],[\"tkey>\",{\"1\":{\"59\":3}}],[\"throw\",{\"1\":{\"43\":1}}],[\"the\",{\"1\":{\"42\":4}}],[\"this\",{\"1\":{\"7\":12,\"8\":11,\"9\":6,\"10\":3,\"11\":4,\"12\":2,\"13\":3,\"14\":8,\"15\":2,\"16\":1,\"35\":1,\"47\":4}}],[\"title\",{\"1\":{\"42\":1}}],[\"time\",{\"1\":{\"8\":2,\"25\":4}}],[\"timeextensions\",{\"1\":{\"8\":1}}],[\"type\",{\"1\":{\"42\":3}}],[\"typeof\",{\"1\":{\"41\":1,\"44\":1}}],[\"traceid\",{\"1\":{\"42\":1}}],[\"tryparse\",{\"1\":{\"25\":1}}],[\"true\",{\"1\":{\"8\":1,\"13\":3,\"21\":1,\"28\":1,\"40\":1,\"42\":1}}],[\"task<t>\",{\"1\":{\"87\":1}}],[\"taskhelper\",{\"1\":{\"2\":1}}],[\"target\",{\"1\":{\"14\":7}}],[\"table\",{\"1\":{\"13\":1}}],[\"t\",{\"1\":{\"9\":1,\"12\":2,\"20\":2,\"38\":2}}],[\"tools\",{\"1\":{\"42\":1}}],[\"toobject<t>\",{\"1\":{\"9\":1}}],[\"toint64\",{\"1\":{\"31\":1}}],[\"toarray\",{\"1\":{\"28\":1,\"40\":1,\"43\":1}}],[\"todatatable<t>\",{\"1\":{\"13\":1}}],[\"todatatable\",{\"1\":{\"13\":2}}],[\"todecimalnozerostring\",{\"1\":{\"10\":1}}],[\"todecimalstandardstring\",{\"1\":{\"10\":2}}],[\"to\",{\"1\":{\"13\":2}}],[\"tojobject\",{\"1\":{\"9\":1}}],[\"tojson\",{\"1\":{\"9\":2}}],[\"totable\",{\"1\":{\"9\":1}}],[\"tolist<t>\",{\"1\":{\"9\":1}}],[\"tolocaltimedatebymilliseconds\",{\"1\":{\"8\":1}}],[\"tolocaltimedatebyseconds\",{\"1\":{\"8\":1}}],[\"tostandardstring\",{\"1\":{\"8\":2}}],[\"tostrarray\",{\"1\":{\"7\":1}}],[\"tounixtimestampbymilliseconds\",{\"1\":{\"8\":1}}],[\"tounixtimestampbyseconds\",{\"1\":{\"8\":1}}],[\"操作例子\",{\"0\":{\"50\":1,\"53\":1,\"56\":1,\"59\":1,\"62\":1,\"65\":1,\"68\":1,\"71\":1,\"74\":1,\"77\":1,\"80\":1,\"83\":1,\"86\":1,\"90\":1,\"93\":1,\"96\":1,\"99\":1}}],[\"操作\",{\"0\":{\"5\":1,\"33\":1,\"104\":1}}],[\"介绍\",{\"0\":{\"4\":1,\"32\":1,\"46\":1,\"102\":1}}],[\"将swagger使用迁移到该包中\",{\"1\":{\"97\":1}}],[\"将创建时间修改时间等改为传入方案\",{\"1\":{\"60\":1}}],[\"将efcoreextension内容迁移到工作单元下\",{\"1\":{\"60\":1}}],[\"将关于swagger的东西去掉\",{\"1\":{\"45\":1}}],[\"将cors默认全部允许继承\",{\"1\":{\"45\":1}}],[\"将common中的部分类移动到该类库中\",{\"1\":{\"2\":1}}],[\"将一些mvc里面的公共类迁移出来\",{\"1\":{\"31\":1}}],[\"将部分无依赖的类移动到common\",{\"1\":{\"31\":1}}],[\"将json序列化等操作转入core包\",{\"1\":{\"31\":1}}],[\"将newtonsoft\",{\"1\":{\"31\":1}}],[\"将html标签转换成text文本\",{\"1\":{\"23\":1}}],[\"将list追加到其他datatable\",{\"1\":{\"13\":1}}],[\"将扩展方法的命名空间改为common\",{\"1\":{\"2\":1}}],[\"引用newtonsoft\",{\"1\":{\"2\":1}}],[\"24t22\",{\"1\":{\"28\":1,\"40\":1}}],[\"250546+08\",{\"1\":{\"28\":1,\"40\":1}}],[\"2505438+08\",{\"1\":{\"28\":1,\"40\":1}}],[\"2501522+08\",{\"1\":{\"28\":1,\"40\":1}}],[\"2222\",{\"1\":{\"87\":1}}],[\"22\",{\"1\":{\"25\":1}}],[\"200\",{\"1\":{\"28\":1,\"40\":1}}],[\"20t22\",{\"1\":{\"28\":1,\"40\":1}}],[\"2022\",{\"1\":{\"25\":1,\"28\":3,\"40\":3}}],[\"201008251145409865\",{\"1\":{\"18\":1}}],[\"2019\",{\"1\":{\"8\":2}}],[\"20\",{\"1\":{\"8\":2,\"28\":1,\"40\":1,\"43\":1}}],[\"21t22\",{\"1\":{\"28\":1,\"40\":1}}],[\"21\",{\"1\":{\"8\":2}}],[\"2\",{\"1\":{\"2\":1,\"25\":1,\"31\":12,\"50\":1,\"51\":1,\"53\":1,\"57\":1,\"60\":3,\"63\":3,\"66\":2,\"69\":4,\"72\":3,\"75\":1,\"81\":1,\"84\":3,\"88\":5,\"91\":1,\"96\":1,\"97\":4,\"100\":1}}],[\"增加或更新组织成员\",{\"1\":{\"103\":1}}],[\"增加校验token方法\",{\"1\":{\"97\":1}}],[\"增加useragent\",{\"1\":{\"91\":1}}],[\"增加downloaddata方法\",{\"1\":{\"91\":1}}],[\"增加datatableextensions\",{\"1\":{\"31\":1}}],[\"增加更加灵活的请求方式send\",{\"1\":{\"88\":1}}],[\"增加patch请求\",{\"1\":{\"88\":1}}],[\"增加get获取文件流的方法\",{\"1\":{\"88\":1}}],[\"增加getorcreate方法\",{\"1\":{\"51\":1}}],[\"增加x\",{\"1\":{\"88\":1}}],[\"增加sqlsugar时间\",{\"1\":{\"84\":1}}],[\"增加sha哈希算法\",{\"1\":{\"31\":1}}],[\"增加注释操作\",{\"1\":{\"78\":1}}],[\"增加默认注入\",{\"1\":{\"60\":1}}],[\"增加默认的控制器处理\",{\"1\":{\"45\":1}}],[\"增加分页相关的类\",{\"1\":{\"60\":1,\"63\":1,\"66\":1}}],[\"增加分页请求类\",{\"1\":{\"31\":1}}],[\"增加非追踪\",{\"1\":{\"60\":1,\"63\":1,\"66\":1,\"69\":1,\"72\":1,\"75\":1}}],[\"增加执行sql扩展\",{\"1\":{\"60\":1}}],[\"增加自增id\",{\"1\":{\"59\":1}}],[\"增加了一些hash的操作\",{\"1\":{\"57\":1}}],[\"增加了如果是filecontentresult\",{\"1\":{\"45\":1}}],[\"增加layui的数据表格返回类\",{\"1\":{\"31\":1}}],[\"增加枚举根据描述获取枚举值\",{\"1\":{\"31\":1}}],[\"增加枚举扩展类\",{\"1\":{\"31\":1}}],[\"增加表达式树扩展方法\",{\"1\":{\"60\":1}}],[\"增加表达式树\",{\"1\":{\"31\":1}}],[\"增加字符串扩展方法\",{\"1\":{\"31\":1}}],[\"增加字符串扩展类\",{\"1\":{\"31\":1}}],[\"增加字符串输出扩展\",{\"1\":{\"2\":1}}],[\"增加http请求formdata形式去提交文件\",{\"1\":{\"88\":1}}],[\"增加httpcontextextensions\",{\"1\":{\"31\":1}}],[\"增加html帮助类\",{\"1\":{\"31\":1}}],[\"增加浮点数扩展\",{\"1\":{\"31\":1}}],[\"增加日期扩展\",{\"1\":{\"31\":1}}],[\"增加集合扩展\",{\"1\":{\"31\":1}}],[\"增加时间公共类\",{\"1\":{\"31\":1}}],[\"增加时间戳和本地时间相互转换方法\",{\"1\":{\"31\":1}}],[\"增加时间段和时间点相互转换代码\",{\"1\":{\"2\":1}}],[\"增加生成随机数的方法\",{\"1\":{\"31\":1}}],[\"增加生成验证码的方法\",{\"1\":{\"31\":1}}],[\"增加依赖注入的类\",{\"1\":{\"31\":1}}],[\"增加\",{\"1\":{\"31\":1}}],[\"增加雪花id算法\",{\"1\":{\"31\":1}}],[\"增加baserequestdto重载\",{\"1\":{\"31\":1}}],[\"增加汉字获取拼音全拼和首字母方法\",{\"1\":{\"31\":1}}],[\"增加性能检测帮助类codetimerhelper\",{\"1\":{\"31\":1}}],[\"增加appsettings\",{\"1\":{\"31\":1}}],[\"增加islongformat\",{\"1\":{\"31\":1}}],[\"增加获取无时区时间的方案tounspecifieddatetime\",{\"1\":{\"31\":1}}],[\"增加创建文件\",{\"1\":{\"30\":1}}],[\"增加json操作扩展\",{\"1\":{\"2\":1}}],[\"增加本地日志文件操作类\",{\"1\":{\"2\":1}}],[\"增加任务运行时间限制方法\",{\"1\":{\"2\":1}}],[\"35\",{\"1\":{\"28\":3,\"40\":3}}],[\"39\",{\"1\":{\"25\":1,\"28\":1,\"40\":1}}],[\"3\",{\"1\":{\"2\":1,\"28\":1,\"31\":13,\"40\":1,\"51\":3,\"54\":1,\"60\":1,\"63\":1,\"66\":1,\"69\":1,\"72\":1,\"75\":1,\"81\":1,\"84\":2,\"88\":2,\"91\":1,\"94\":1,\"97\":2}}],[\"并且改名为tobase64encode\",{\"1\":{\"2\":1}}],[\"迁移base64的扩展到stringextension\",{\"1\":{\"2\":1}}],[\"401\",{\"1\":{\"43\":1}}],[\"404\",{\"1\":{\"43\":1}}],[\"40ff21ce6815e3b18232fa00f2024f67\",{\"1\":{\"42\":1}}],[\"400\",{\"1\":{\"28\":2,\"40\":2,\"42\":2,\"43\":1}}],[\"44\",{\"1\":{\"28\":1,\"40\":1}}],[\"41\",{\"1\":{\"25\":1}}],[\"4\",{\"1\":{\"2\":1,\"28\":1,\"31\":9,\"40\":1,\"60\":1,\"88\":1,\"91\":1}}],[\"00\",{\"1\":{\"28\":3,\"40\":3,\"42\":2}}],[\"05\",{\"1\":{\"28\":3,\"40\":3}}],[\"01\",{\"1\":{\"8\":2,\"10\":2}}],[\"0\",{\"1\":{\"2\":6,\"31\":23,\"45\":20,\"48\":4,\"51\":7,\"54\":4,\"57\":4,\"60\":18,\"63\":11,\"66\":11,\"69\":13,\"72\":11,\"75\":9,\"78\":3,\"81\":4,\"84\":6,\"88\":6,\"91\":8,\"94\":3,\"97\":8,\"100\":2,\"107\":4}}],[\"1框架兼容更多系统\",{\"1\":{\"94\":1}}],[\"1发送邮件服务\",{\"1\":{\"94\":1}}],[\"163\",{\"1\":{\"93\":1}}],[\"1版本sqlsugar查询\",{\"1\":{\"84\":1}}],[\"1版本sqlsugar使用封装\",{\"1\":{\"81\":1}}],[\"1版本\",{\"1\":{\"84\":1}}],[\"1版本的生成二维码和条形码\",{\"1\":{\"100\":1}}],[\"1版本的jwttoken公共库\",{\"1\":{\"97\":1}}],[\"1版本的http请求公共库\",{\"1\":{\"88\":1}}],[\"1版本的redis公共库\",{\"1\":{\"54\":1}}],[\"1版本的内存缓存\",{\"1\":{\"51\":2}}],[\"1和\",{\"1\":{\"72\":1}}],[\"125\",{\"1\":{\"28\":1,\"40\":1}}],[\"13\",{\"1\":{\"28\":3,\"40\":3}}],[\"193\",{\"1\":{\"25\":1}}],[\"19\",{\"1\":{\"25\":1}}],[\"10874582\",{\"1\":{\"106\":1}}],[\"10357086\",{\"1\":{\"102\":1}}],[\"10\",{\"1\":{\"25\":1}}],[\"1\",{\"1\":{\"2\":6,\"10\":3,\"25\":3,\"28\":1,\"31\":48,\"40\":1,\"42\":1,\"43\":1,\"45\":10,\"48\":2,\"50\":1,\"51\":10,\"53\":1,\"54\":6,\"57\":4,\"60\":18,\"63\":16,\"66\":14,\"69\":10,\"72\":12,\"75\":4,\"78\":3,\"81\":8,\"84\":10,\"88\":19,\"91\":8,\"94\":3,\"96\":1,\"97\":15,\"100\":1,\"107\":2}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
